{
  "version": 3,
  "sources": ["../src/actions/Action.js", "../src/actions/AddAction.js", "../src/actions/B2DAction.js", "../src/actions/BRegAction.js", "../src/actions/HaltOutAction.js", "../src/actions/MulAction.js", "../src/actions/NopAction.js", "../src/actions/OutputAction.js", "../src/actions/SubAction.js", "../src/actions/URegAction.js", "../src/actions/LegacyTRegAction.js", "../src/internalError.js", "../src/components/ADD.js", "../src/components/B2D.js", "../src/components/UReg.js", "../src/components/BReg.js", "../src/components/MUL.js", "../src/components/NOP.js", "../src/components/OUTPUT.js", "../src/components/SUB.js", "../src/components/LegacyTReg.js", "../src/ActionExecutor.js", "../src/parser/parseAction.js", "../src/parser/message.js", "../src/parser/parseReplacements.js", "../src/Command.js", "../src/validators/action_return_once.js", "../src/validators/next_state_is_not_initial.js", "../src/validators/no_dup_action.js", "../src/validators/no_same_component.js", "../src/validators/z_and_nz.js", "../src/ProgramLines.js", "../src/validate.js", "../src/expandTemplate.js", "../src/parser/parseComponentsHeader.js", "../src/Program.js", "../src/compile.js", "../src/Machine.js", "https://cdn.jsdelivr.net/npm/comlink@4.4.2/dist/esm/comlink.js", "../frontend/machine-worker.js"],
  "sourcesContent": ["// @ts-check\n\n/**\n * \u30A2\u30AF\u30B7\u30E7\u30F3\n * @abstract\n */\nexport class Action {\n    /**\n     * Convert to string\n     * \u6587\u5B57\u5217\u5316\u3059\u308B\n     * @abstract\n     * @returns {string}\n     */\n    pretty() {\n        return ``;\n    }\n\n    /**\n     * Does this action return a value?\n     * \u5024\u3092\u8FD4\u3059\u304B\u3069\u3046\u304B\n     * @returns {boolean} \u5024\u3092\u8FD4\u3059\u5834\u5408true\n     */\n    doesReturnValue() {\n        return false;\n    }\n\n    /**\n     * \u540C\u3058\u30B3\u30F3\u30DD\u30FC\u30CD\u30F3\u30C8\u306E\u30A2\u30AF\u30B7\u30E7\u30F3\u3067\u3042\u308C\u3070true\u3092\u8FD4\u3059\n     * @param {Action} _action\n     * @returns {boolean}\n     */\n    isSameComponent(_action) {\n        return true;\n    }\n}\n", "// @ts-check\n\nimport { ADD_A1, ADD_B0, ADD_B1 } from \"../action_consts/Add_consts.js\";\nimport { Action } from \"./Action.js\";\n\nconst ADD_A1_STRING = \"A1\";\nconst ADD_B0_STRING = \"B0\";\nconst ADD_B1_STRING = \"B1\";\n\nconst ADD_STRING = \"ADD\";\n\n/**\n * @typedef {ADD_A1 | ADD_B0 | ADD_B1} AddOp\n */\n\n/**\n * @typedef {ADD_A1_STRING | ADD_B0_STRING | ADD_B1_STRING} AddOpString\n */\n\n/**\n * @param {AddOp} op\n * @returns {AddOpString}\n */\nconst prettyOp = (op) => {\n    switch (op) {\n        case ADD_A1:\n            return ADD_A1_STRING;\n        case ADD_B0:\n            return ADD_B0_STRING;\n        case ADD_B1:\n            return ADD_B1_STRING;\n    }\n};\n\n/**\n * @param {AddOpString} op\n * @returns {AddOp}\n */\nconst parseOp = (op) => {\n    switch (op) {\n        case ADD_A1_STRING:\n            return ADD_A1;\n        case ADD_B0_STRING:\n            return ADD_B0;\n        case ADD_B1_STRING:\n            return ADD_B1;\n    }\n};\n\n/**\n * Action for `ADD`\n */\nexport class AddAction extends Action {\n    /**\n     * @param {AddOp} op\n     */\n    constructor(op) {\n        super();\n\n        /**\n         * @type {AddOp}\n         * @readonly\n         */\n        this.op = op;\n    }\n\n    /**\n     * @override\n     */\n    pretty() {\n        return `${ADD_STRING} ${prettyOp(this.op)}`;\n    }\n\n    /**\n     * \u6587\u5B57\u5217\u304B\u3089\u5909\u63DB\u3059\u308B\n     * @param {string} str\n     * @returns {AddAction | undefined}\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 2) {\n            return undefined;\n        }\n        const [add, reg] = array;\n        if (add !== ADD_STRING) {\n            return undefined;\n        }\n        if (\n            reg === ADD_A1_STRING || reg === ADD_B0_STRING ||\n            reg === ADD_B1_STRING\n        ) {\n            return new AddAction(parseOp(reg));\n        }\n        return undefined;\n    }\n\n    /**\n     * @override\n     */\n    doesReturnValue() {\n        switch (this.op) {\n            case ADD_A1:\n                return false;\n            case ADD_B0:\n                return true;\n            case ADD_B1:\n                return true;\n        }\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        return action instanceof AddAction;\n    }\n}\n", "// @ts-check\n\nimport {\n    B2D_B2D,\n    B2D_B2DX,\n    B2D_B2DY,\n    B2D_INC,\n    B2D_READ,\n    B2D_SET,\n    B2D_TDEC,\n} from \"../action_consts/B2D_consts.js\";\nimport { Action } from \"./Action.js\";\n\n/**\n * @typedef {B2D_INC_STRING | B2D_TDEC_STRING |\n *          B2D_READ_STRING | B2D_SET_STRING} B2DOpString\n */\n\n/**\n * @typedef {B2D_B2DX_STRING | B2D_B2DY_STRING | B2D_B2D_STRING} B2DAxisString\n */\n\nconst B2D_INC_STRING = \"INC\";\nconst B2D_TDEC_STRING = \"TDEC\";\nconst B2D_READ_STRING = \"READ\";\nconst B2D_SET_STRING = \"SET\";\nconst B2D_B2DX_STRING = \"B2DX\";\nconst B2D_B2DY_STRING = \"B2DY\";\nconst B2D_B2D_STRING = \"B2D\";\n\nconst B2D_LEGACY_TDEC_STRING = \"DEC\";\nconst B2D_LEGACY_B2DX_STRING = \"SQX\";\nconst B2D_LEGACY_B2DY_STRING = \"SQY\";\nconst B2D_LEGACY_B2D_STRING = \"SQ\";\n\n/**\n * @typedef {import(\"../action_consts/B2D_consts.js\").B2DOp} B2DOp\n */\n\n/**\n * @typedef {import(\"../action_consts/B2D_consts.js\").B2DAxis} B2DAxis\n */\n\n/**\n * @param {B2DOpString} op\n * @returns {B2DOp}\n */\nconst parseOp = (op) => {\n    switch (op) {\n        case B2D_INC_STRING:\n            return B2D_INC;\n        case B2D_TDEC_STRING:\n            return B2D_TDEC;\n        case B2D_READ_STRING:\n            return B2D_READ;\n        case B2D_SET_STRING:\n            return B2D_SET;\n    }\n};\n\n/**\n * @param {B2DOp} op\n * @returns {B2DOpString}\n */\nconst prettyOp = (op) => {\n    switch (op) {\n        case B2D_INC:\n            return B2D_INC_STRING;\n        case B2D_TDEC:\n            return B2D_TDEC_STRING;\n        case B2D_READ:\n            return B2D_READ_STRING;\n        case B2D_SET:\n            return B2D_SET_STRING;\n    }\n};\n/**\n * @param {B2DAxisString} op\n * @returns {B2DAxis}\n */\nconst parseAxis = (op) => {\n    switch (op) {\n        case B2D_B2DX_STRING:\n            return B2D_B2DX;\n        case B2D_B2DY_STRING:\n            return B2D_B2DY;\n        case B2D_B2D_STRING:\n            return B2D_B2D;\n    }\n};\n\n/**\n * @param {B2DAxis} op\n * @returns {B2DAxisString}\n */\nconst prettyAxis = (op) => {\n    switch (op) {\n        case B2D_B2DX:\n            return B2D_B2DX_STRING;\n        case B2D_B2DY:\n            return B2D_B2DY_STRING;\n        case B2D_B2D:\n            return B2D_B2D_STRING;\n    }\n};\n\n/**\n * Action for `B2D`\n */\nexport class B2DAction extends Action {\n    /**\n     * @param {B2DOp} op\n     * @param {B2DAxis} axis\n     */\n    constructor(op, axis) {\n        super();\n\n        /**\n         * @type {B2DOp}\n         * @readonly\n         */\n        this.op = op;\n\n        /**\n         * @type {B2DAxis}\n         * @readonly\n         */\n        this.axis = axis;\n    }\n\n    /**\n     * @override\n     */\n    pretty() {\n        return `${prettyOp(this.op)} ${prettyAxis(this.axis)}`;\n    }\n\n    /**\n     * @param {string} str\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 2) {\n            return undefined;\n        }\n        const [op, axis] = array;\n        if (op === undefined || axis === undefined) {\n            return undefined;\n        }\n        if (op === B2D_INC_STRING || op === B2D_TDEC_STRING) {\n            if (axis === B2D_B2DX_STRING || axis === B2D_B2DY_STRING) {\n                return new B2DAction(parseOp(op), parseAxis(axis));\n            }\n        } else if (op === B2D_READ_STRING || op === B2D_SET_STRING) {\n            if (axis === B2D_B2D_STRING) {\n                return new B2DAction(parseOp(op), parseAxis(axis));\n            }\n        }\n        // APGsembly 1.0\n        switch (op) {\n            case B2D_INC_STRING: {\n                switch (axis) {\n                    case B2D_LEGACY_B2DX_STRING:\n                        return new B2DAction(B2D_INC, B2D_B2DX);\n                    case B2D_LEGACY_B2DY_STRING:\n                        return new B2DAction(B2D_INC, B2D_B2DY);\n                    default:\n                        return undefined;\n                }\n            }\n            case B2D_LEGACY_TDEC_STRING: {\n                switch (axis) {\n                    case B2D_LEGACY_B2DX_STRING:\n                        return new B2DAction(B2D_TDEC, B2D_B2DX);\n                    case B2D_LEGACY_B2DY_STRING:\n                        return new B2DAction(B2D_TDEC, B2D_B2DY);\n                    default:\n                        return undefined;\n                }\n            }\n            case B2D_READ_STRING: {\n                switch (axis) {\n                    case B2D_LEGACY_B2D_STRING:\n                        return new B2DAction(B2D_READ, B2D_B2D);\n                    default:\n                        return undefined;\n                }\n            }\n            case B2D_SET_STRING: {\n                switch (axis) {\n                    case B2D_LEGACY_B2D_STRING:\n                        return new B2DAction(B2D_SET, B2D_B2D);\n                    default:\n                        return undefined;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * @override\n     */\n    doesReturnValue() {\n        switch (this.op) {\n            case B2D_INC:\n                return false;\n            case B2D_TDEC:\n                return true;\n            case B2D_READ:\n                return true;\n            case B2D_SET:\n                return false;\n        }\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        if (action instanceof B2DAction) {\n            const thisAxis = this.axis;\n            const otherAxis = action.axis;\n            if (thisAxis === B2D_B2DX && otherAxis === B2D_B2DY) {\n                return false;\n            } else if (thisAxis === B2D_B2DY && otherAxis === B2D_B2DX) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n}\n", "// @ts-check\n\nimport { B_INC, B_READ, B_SET, B_TDEC } from \"../action_consts/BReg_consts.js\";\nimport { Action } from \"./Action.js\";\n\nconst B_INC_STRING = \"INC\";\nconst B_TDEC_STRING = \"TDEC\";\nconst B_READ_STRING = \"READ\";\nconst B_SET_STRING = \"SET\";\n\nconst B_STRING = \"B\";\n\n/**\n * @typedef {B_INC | B_TDEC | B_READ | B_SET} BOp\n */\n\n/**\n * @typedef {B_INC_STRING | B_TDEC_STRING |\n *          B_READ_STRING | B_SET_STRING} BOpString\n */\n\n/**\n * @param {BOp} op\n * @returns {BOpString}\n */\nconst prettyOp = (op) => {\n    switch (op) {\n        case B_INC:\n            return B_INC_STRING;\n        case B_TDEC:\n            return B_TDEC_STRING;\n        case B_READ:\n            return B_READ_STRING;\n        case B_SET:\n            return B_SET_STRING;\n    }\n};\n\n/**\n * @param {BOpString} op\n * @returns {BOp}\n */\nconst parseOp = (op) => {\n    switch (op) {\n        case B_INC_STRING:\n            return B_INC;\n        case B_TDEC_STRING:\n            return B_TDEC;\n        case B_READ_STRING:\n            return B_READ;\n        case B_SET_STRING:\n            return B_SET;\n    }\n};\n\n/**\n * Action for `Bn`\n */\nexport class BRegAction extends Action {\n    /**\n     * @param {BOp} op\n     * @param {number} regNumber\n     */\n    constructor(op, regNumber) {\n        super();\n\n        /**\n         * @type {BOp}\n         * @readonly\n         */\n        this.op = op;\n\n        /**\n         * @readonly\n         */\n        this.regNumber = regNumber;\n\n        /**\n         * @type {import('../components/BReg.js').BReg | undefined}\n         */\n        this.registerCache = undefined;\n    }\n\n    /**\n     * @override\n     */\n    pretty() {\n        return `${prettyOp(this.op)} ${B_STRING}${this.regNumber}`;\n    }\n\n    /**\n     * @param {string} str\n     * @returns {BRegAction | undefined}\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 2) {\n            return undefined;\n        }\n        const [op, reg] = array;\n        if (op === undefined || reg === undefined) {\n            return undefined;\n        }\n        if (\n            op === B_INC_STRING || op === B_TDEC_STRING ||\n            op === B_READ_STRING || op === B_SET_STRING\n        ) {\n            if (reg.startsWith(B_STRING)) {\n                const str = reg.slice(1);\n                if (/^[0-9]+$/u.test(str)) {\n                    return new BRegAction(parseOp(op), parseInt(str, 10));\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * @override\n     */\n    doesReturnValue() {\n        switch (this.op) {\n            case B_INC:\n                return false;\n            case B_TDEC:\n                return true;\n            case B_READ:\n                return true;\n            case B_SET:\n                return false;\n        }\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        if (action instanceof BRegAction) {\n            return this.regNumber === action.regNumber;\n        } else {\n            return false;\n        }\n    }\n}\n", "// @ts-check\n\nimport { Action } from \"./Action.js\";\n\n/**\n * @type {string}\n */\nconst HALT_OUT_STRING = `HALT_OUT`;\n\n/**\n * @type {string}\n */\nconst HALT_STRING = `HALT`;\n\n/**\n * `HALT_OUT` action\n */\nexport class HaltOutAction extends Action {\n    /**\n     * @param {boolean} output\n     */\n    constructor(output = true) {\n        super();\n        this.output = output;\n    }\n\n    /**\n     * @override\n     * @returns {string}\n     */\n    pretty() {\n        return this.output ? HALT_OUT_STRING : HALT_STRING;\n    }\n\n    /**\n     * @param {string} str\n     * @returns {HaltOutAction | undefined}\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 1) {\n            return undefined;\n        }\n        const [haltOut] = array;\n        if (haltOut === HALT_OUT_STRING) {\n            return new HaltOutAction(true);\n        }\n        if (haltOut === HALT_STRING) {\n            return new HaltOutAction(false);\n        }\n        return undefined;\n    }\n\n    /**\n     * \u5B9F\u969B\u306B\u306F\u5024\u306F\u3069\u3061\u3089\u3067\u3082\u826F\u3044\n     * @override\n     */\n    doesReturnValue() {\n        return false;\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        return action instanceof HaltOutAction;\n    }\n}\n", "// @ts-check\n\nimport { MUL_0, MUL_1 } from \"../action_consts/Mul_consts.js\";\nimport { Action } from \"./Action.js\";\n\nconst MUL_0_STRING = \"0\";\nconst MUL_1_STRING = \"1\";\n\nconst MUL_STRING = \"MUL\";\n\n/**\n * @typedef {MUL_0 | MUL_1} MulOp\n */\n\n/**\n * @typedef {MUL_0_STRING | MUL_1_STRING} MulOpString\n */\n\n/**\n * @param {MulOpString} op\n * @returns {MulOp}\n */\nconst parseOp = (op) => {\n    switch (op) {\n        case MUL_0_STRING:\n            return MUL_0;\n        case MUL_1_STRING:\n            return MUL_1;\n    }\n};\n\n/**\n * @param {MulOp} op\n * @returns {MulOpString}\n */\nconst prettyOp = (op) => {\n    switch (op) {\n        case MUL_0:\n            return MUL_0_STRING;\n        case MUL_1:\n            return MUL_1_STRING;\n    }\n};\n\n/**\n * Action for `MUL`\n */\nexport class MulAction extends Action {\n    /**\n     * @param {MulOp} op\n     */\n    constructor(op) {\n        super();\n\n        /**\n         * @type {MulOp}\n         * @readonly\n         */\n        this.op = op;\n    }\n\n    /**\n     * @override\n     */\n    pretty() {\n        return `${MUL_STRING} ${prettyOp(this.op)}`;\n    }\n\n    /**\n     * @param {string} str\n     * @returns {MulAction | undefined}\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 2) {\n            return undefined;\n        }\n\n        const [mul, op] = array;\n        if (mul !== MUL_STRING) {\n            return undefined;\n        }\n\n        if (op === MUL_0_STRING || op === MUL_1_STRING) {\n            return new MulAction(parseOp(op));\n        }\n\n        return undefined;\n    }\n\n    /**\n     * @override\n     */\n    doesReturnValue() {\n        return true;\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        return action instanceof MulAction;\n    }\n}\n", "// @ts-check\n\nimport { Action } from \"./Action.js\";\n\nconst NOP_STRING = \"NOP\";\n\n/**\n * `NOP` action\n */\nexport class NopAction extends Action {\n    constructor() {\n        super();\n    }\n\n    /**\n     * @override\n     * @returns {string}\n     */\n    pretty() {\n        return NOP_STRING;\n    }\n\n    /**\n     * @param {string} str\n     * @returns {NopAction | undefined}\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 1) {\n            return undefined;\n        }\n        const [nop] = array;\n        if (nop !== NOP_STRING) {\n            return undefined;\n        }\n        return new NopAction();\n    }\n\n    /**\n     * @returns @override\n     */\n    doesReturnValue() {\n        return true;\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        return action instanceof NopAction;\n    }\n}\n", "// @ts-check\n\nimport { Action } from \"./Action.js\";\n\nconst OUTPUT_STRING = \"OUTPUT\";\n\n/**\n * `OUTPUT`\n */\nexport class OutputAction extends Action {\n    /**\n     * @param {string} digit\n     */\n    constructor(digit) {\n        super();\n\n        /**\n         * @readonly\n         */\n        this.digit = digit;\n    }\n\n    /**\n     * @override\n     * @returns {string}\n     */\n    pretty() {\n        return `${OUTPUT_STRING} ${this.digit}`;\n    }\n\n    /**\n     * @param {string} str\n     * @returns {OutputAction | undefined}\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 2) {\n            return undefined;\n        }\n        const [output, digit] = array;\n        if (output !== OUTPUT_STRING) {\n            return undefined;\n        }\n        if (digit === undefined) {\n            return undefined;\n        }\n        return new OutputAction(digit);\n    }\n\n    /**\n     * @override\n     */\n    doesReturnValue() {\n        return false;\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        return action instanceof OutputAction;\n    }\n}\n", "// @ts-check\n\nimport { SUB_A1, SUB_B0, SUB_B1 } from \"../action_consts/Sub_consts.js\";\nimport { Action } from \"./Action.js\";\n\nconst SUB_A1_STRING = \"A1\";\nconst SUB_B0_STRING = \"B0\";\nconst SUB_B1_STRING = \"B1\";\n\nconst SUB_STRING = \"SUB\";\n\n/**\n * @typedef {SUB_A1 | SUB_B0 | SUB_B1} SubOp\n */\n\n/**\n * @typedef {SUB_A1_STRING | SUB_B0_STRING | SUB_B1_STRING} SubOpString\n */\n\n/**\n * @param {SubOp} op\n * @returns {SubOpString}\n */\nconst prettyOp = (op) => {\n    switch (op) {\n        case SUB_A1:\n            return SUB_A1_STRING;\n        case SUB_B0:\n            return SUB_B0_STRING;\n        case SUB_B1:\n            return SUB_B1_STRING;\n    }\n};\n\n/**\n * @param {SubOpString} op\n * @returns {SubOp}\n */\nconst parseOp = (op) => {\n    switch (op) {\n        case SUB_A1_STRING:\n            return SUB_A1;\n        case SUB_B0_STRING:\n            return SUB_B0;\n        case SUB_B1_STRING:\n            return SUB_B1;\n    }\n};\n\n/**\n * Action for `SUB`\n */\nexport class SubAction extends Action {\n    /**\n     * @param {SubOp} op\n     */\n    constructor(op) {\n        super();\n\n        /**\n         * @type {SubOp}\n         * @readonly\n         */\n        this.op = op;\n    }\n\n    /**\n     * @override\n     */\n    pretty() {\n        return `${SUB_STRING} ${prettyOp(this.op)}`;\n    }\n\n    /**\n     * @param {string} str\n     * @returns {SubAction | undefined}\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 2) {\n            return undefined;\n        }\n\n        const [sub, reg] = array;\n        if (sub !== SUB_STRING) {\n            return undefined;\n        }\n\n        if (\n            reg === SUB_A1_STRING || reg === SUB_B0_STRING ||\n            reg === SUB_B1_STRING\n        ) {\n            return new SubAction(parseOp(reg));\n        }\n\n        return undefined;\n    }\n\n    /**\n     * @returns @override\n     */\n    doesReturnValue() {\n        switch (this.op) {\n            case SUB_A1:\n                return false;\n            case SUB_B0:\n                return true;\n            case SUB_B1:\n                return true;\n        }\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        return action instanceof SubAction;\n    }\n}\n", "// @ts-check\n\nimport { U_INC, U_TDEC } from \"../action_consts/UReg_consts.js\";\nimport { Action } from \"./Action.js\";\n\nconst U_INC_STRING = \"INC\";\nconst U_TDEC_STRING = \"TDEC\";\n\nconst U_STRING = \"U\";\nconst R_STRING = \"R\";\n\n/**\n * @typedef {U_INC | U_TDEC} UOp\n */\n\n/**\n * @typedef {U_INC_STRING | U_TDEC_STRING} UOpString\n */\n\n/**\n * @param {UOp} op\n * @returns {UOpString}\n */\nconst prettyOp = (op) => {\n    switch (op) {\n        case U_INC:\n            return U_INC_STRING;\n        case U_TDEC:\n            return U_TDEC_STRING;\n    }\n};\n\n/**\n * @param {UOpString} op\n * @returns {UOp}\n */\nconst parseOp = (op) => {\n    switch (op) {\n        case U_INC_STRING:\n            return U_INC;\n        case U_TDEC_STRING:\n            return U_TDEC;\n    }\n};\n\n/**\n * Action for `Un`\n */\nexport class URegAction extends Action {\n    /**\n     * @param {UOp} op\n     * @param {number} regNumber\n     */\n    constructor(op, regNumber) {\n        super();\n\n        /**\n         * @type {UOp}\n         * @readonly\n         */\n        this.op = op;\n\n        /**\n         * @readonly\n         */\n        this.regNumber = regNumber;\n\n        /**\n         * @type {import('../components/UReg.js').UReg | undefined}\n         */\n        this.registerCache = undefined;\n    }\n\n    /**\n     * @override\n     */\n    pretty() {\n        return `${prettyOp(this.op)} ${U_STRING}${this.regNumber}`;\n    }\n\n    /**\n     * @param {string} str\n     * @returns {URegAction | undefined}\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 2) {\n            return undefined;\n        }\n\n        const [op, reg] = array;\n        if (op === undefined || reg === undefined) {\n            return undefined;\n        }\n\n        if (op === U_INC_STRING || op === U_TDEC_STRING) {\n            // R for APGsembly 1.0\n            if (reg.startsWith(U_STRING) || reg.startsWith(R_STRING)) {\n                const str = reg.slice(1);\n                if (/^[0-9]+$/u.test(str)) {\n                    return new URegAction(parseOp(op), parseInt(str, 10));\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * @override\n     */\n    doesReturnValue() {\n        switch (this.op) {\n            case U_INC:\n                return false;\n            case U_TDEC:\n                return true;\n        }\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        if (action instanceof URegAction) {\n            return this.regNumber === action.regNumber;\n        } else {\n            return false;\n        }\n    }\n}\n", "// @ts-check\n\nimport {\n    T_DEC,\n    T_INC,\n    T_READ,\n    T_RESET,\n    T_SET,\n} from \"../action_consts/LegacyTReg_consts.js\";\nimport { Action } from \"./Action.js\";\n\nconst T_INC_STRING = \"INC\";\nconst T_DEC_STRING = \"DEC\";\nconst T_READ_STRING = \"READ\";\nconst T_SET_STRING = \"SET\";\nconst T_RESET_STRING = \"RESET\";\n\n/**\n * @typedef {T_INC | T_DEC | T_READ | T_SET | T_RESET} TOp\n */\n\n/**\n * @typedef {T_INC_STRING | T_DEC_STRING |\n *          T_READ_STRING | T_SET_STRING | T_RESET_STRING} TOpString\n */\n\n/**\n * @param {TOp} op\n * @returns {TOpString}\n */\nconst prettyOp = (op) => {\n    switch (op) {\n        case T_INC:\n            return T_INC_STRING;\n        case T_DEC:\n            return T_DEC_STRING;\n        case T_READ:\n            return T_READ_STRING;\n        case T_SET:\n            return T_SET_STRING;\n        case T_RESET:\n            return T_RESET_STRING;\n    }\n};\n\n/**\n * @param {TOpString} op\n * @returns {TOp}\n */\nconst parseOp = (op) => {\n    switch (op) {\n        case T_INC_STRING:\n            return T_INC;\n        case T_DEC_STRING:\n            return T_DEC;\n        case T_READ_STRING:\n            return T_READ;\n        case T_SET_STRING:\n            return T_SET;\n        case T_RESET_STRING:\n            return T_RESET;\n    }\n};\n\n/**\n * Action for `Tn`\n */\nexport class LegacyTRegAction extends Action {\n    /**\n     * @param {TOp} op\n     * @param {number} regNumber\n     */\n    constructor(op, regNumber) {\n        super();\n\n        /**\n         * @type {TOp}\n         * @readonly\n         */\n        this.op = op;\n\n        /**\n         * @readonly\n         */\n        this.regNumber = regNumber;\n    }\n\n    /**\n     * @override\n     */\n    pretty() {\n        return `${prettyOp(this.op)} T${this.regNumber}`;\n    }\n\n    /**\n     * @param {string} str\n     * @returns {LegacyTRegAction | undefined}\n     */\n    static parse(str) {\n        const array = str.trim().split(/\\s+/u);\n        if (array.length !== 2) {\n            return undefined;\n        }\n        const [op, reg] = array;\n        if (op === undefined || reg === undefined) {\n            return undefined;\n        }\n        if (\n            op === T_INC_STRING || op === T_DEC_STRING ||\n            op === T_READ_STRING || op === T_SET_STRING || op === T_RESET_STRING\n        ) {\n            if (reg.startsWith(\"T\")) {\n                const str = reg.slice(1);\n                if (/^[0-9]+$/u.test(str)) {\n                    return new LegacyTRegAction(parseOp(op), parseInt(str, 10));\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * @override\n     */\n    doesReturnValue() {\n        switch (this.op) {\n            case T_INC:\n                return true;\n            case T_DEC:\n                return true;\n            case T_READ:\n                return true;\n            case T_SET:\n                return false;\n            case T_RESET:\n                return false;\n        }\n    }\n\n    /**\n     * @override\n     * @param {Action} action\n     * @returns {boolean}\n     */\n    isSameComponent(action) {\n        if (action instanceof LegacyTRegAction) {\n            return this.regNumber === action.regNumber;\n        } else {\n            return false;\n        }\n    }\n}\n", "/**\n * @returns {never}\n */\nexport const internalError = () => {\n    throw Error(\"internal error\");\n};\n", "// @ts-check\n\nimport { AddAction } from \"../actions/AddAction.js\";\nimport { ADD_A1, ADD_B0, ADD_B1 } from \"../action_consts/Add_consts.js\";\nimport { internalError } from \"../internalError.js\";\n\n/**\n * ADD\n */\nexport class ADD {\n    constructor() {\n        /**\n         * 0 ~ 15\n         * @type {number}\n         * @private\n         */\n        this.value = 0;\n    }\n\n    /**\n     * @param {AddAction} act\n     * @returns {0 | 1 | undefined}\n     */\n    action(act) {\n        switch (act.op) {\n            // A1 479061\n            // B1 535537\n            // B0 4135003\n            case ADD_B0: {\n                const value = this.value;\n                const t = value % 2;\n                // deno-fmt-ignore\n                this.value = [\n                    0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b1001, 0b1001,\n                    0b0000, 0b0000, 0b1001, 0b1001, 0b1001, 0b1001, 0b1001, 0b1001\n                ][value] ?? internalError();\n                // @ts-ignore\n                return t;\n            }\n            case ADD_B1: {\n                const value = this.value;\n                const t = 1 - value % 2;\n                // deno-fmt-ignore\n                this.value = [\n                    0b0000, 0b0000, 0b0000, 0b0000, 0b1001, 0b1001, 0b0000, 0b0000,\n                    0b1001, 0b1001, 0b0000, 0b0000, 0b1001, 0b1001, 0b1001, 0b1001\n                ][value] ?? internalError();\n                // @ts-ignore\n                return t;\n            }\n            case ADD_A1: {\n                // deno-fmt-ignore\n                this.value = [\n                    0b0101, 0b0100, 0b0111, 0b0110, 0b0001, 0b0000, 0b0011, 0b0010,\n                    0b1101, 0b1100, 0b1111, 0b1110, 0b1001, 0b1000, 0b1011, 0b1010\n                ][this.value] ?? internalError();\n                return undefined;\n            }\n            default:\n                internalError();\n        }\n    }\n\n    /**\n     * @returns {number}\n     */\n    getValue() {\n        return this.value;\n    }\n\n    /**\n     * `ADD A1`\n     * @returns {undefined}\n     */\n    a1() {\n        this.action(new AddAction(ADD_A1));\n        return undefined;\n    }\n\n    /**\n     * `ADD B0`\n     * @returns {0 | 1}\n     */\n    b0() {\n        const t = this.action(new AddAction(ADD_B0));\n        if (t === undefined) {\n            internalError();\n        }\n        return t;\n    }\n\n    /**\n     * `ADD B1`\n     * @returns {0 | 1}\n     */\n    b1() {\n        const t = this.action(new AddAction(ADD_B1));\n        if (t === undefined) {\n            internalError();\n        }\n        return t;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.value.toString(2).padStart(4, \"0\");\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringDetail() {\n        const str = this.toString();\n        return `${str.slice(0, 3)} bit${str.slice(3)}`;\n    }\n}\n", "// @ts-check\n\nimport { B2DAction } from \"../actions/B2DAction.js\";\nimport {\n    B2D_B2D,\n    B2D_B2DX,\n    B2D_B2DY,\n    B2D_INC,\n    B2D_READ,\n    B2D_SET,\n    B2D_TDEC,\n} from \"../action_consts/B2D_consts.js\";\nimport { internalError } from \"../internalError.js\";\n\n/**\n * @template A\n * @param {number} n\n * @param {(_: number) => A} f\n * @returns {A[]}\n */\nconst generateArray = (n, f) => Array(n).fill(0).map((_, i) => f(i));\n\n/**\n * B2D\n * binary 2-dimensional\n */\nexport class B2D {\n    constructor() {\n        const x = 0; // \u5F15\u6570\u306B\u3067\u304D\u308B\u304C\u4F7F\u7528\u3057\u306A\u3044\u306E\u3067\u3053\u3053\u3067\u56FA\u5B9A\n        const y = 0;\n\n        this.x = x;\n        this.y = y;\n\n        /**\n         * @private\n         */\n        this.maxX = x;\n\n        /**\n         * @private\n         */\n        this.maxY = y;\n\n        /**\n         * @private\n         * @type {(0 | 1)[][]}\n         */\n        this.array = generateArray(y + 1, () => generateArray(x + 1, () => 0));\n    }\n\n    /**\n     * @returns {(0 | 1)[][]}\n     */\n    getArray() {\n        return this.array;\n    }\n\n    /**\n     * @returns {number}\n     */\n    getMaxX() {\n        return this.maxX;\n    }\n\n    /**\n     * @returns {number}\n     */\n    getMaxY() {\n        return this.maxY;\n    }\n\n    /**\n     * @param {B2DAction} act\n     * @returns {0 | 1 | void}\n     */\n    action(act) {\n        switch (act.op) {\n            case B2D_INC: {\n                switch (act.axis) {\n                    case B2D_B2DX:\n                        return this.incB2DX();\n                    case B2D_B2DY:\n                        return this.incB2DY();\n                    case B2D_B2D:\n                        internalError();\n                }\n                break;\n            }\n            case B2D_TDEC: {\n                switch (act.axis) {\n                    case B2D_B2DX:\n                        return this.tdecB2DX();\n                    case B2D_B2DY:\n                        return this.tdecB2DY();\n                    case B2D_B2D:\n                        internalError();\n                }\n                break;\n            }\n            case B2D_READ: {\n                switch (act.axis) {\n                    case B2D_B2D:\n                        return this.read();\n                    default:\n                        internalError();\n                }\n                break;\n            }\n            case B2D_SET: {\n                switch (act.axis) {\n                    case B2D_B2D:\n                        return this.set();\n                    default:\n                        internalError();\n                }\n                break;\n            }\n            default:\n                internalError();\n        }\n    }\n\n    /**\n     * `INC B2DX`\n     * @returns {void}\n     */\n    incB2DX() {\n        this.x++;\n        if (this.maxX < this.x) {\n            for (const a of this.array) {\n                a.push(0);\n            }\n            this.maxX = this.x;\n        }\n    }\n\n    /**\n     * `INC B2DY`\n     * @returns {void}\n     */\n    incB2DY() {\n        this.y++;\n        if (this.maxY < this.y) {\n            this.array.push(generateArray(this.maxX + 1, () => 0));\n            this.maxY = this.y;\n        }\n    }\n\n    /**\n     * `TDEC B2DX`\n     * @returns {0 | 1}\n     */\n    tdecB2DX() {\n        if (this.x === 0) {\n            return 0;\n        } else {\n            this.x--;\n            return 1;\n        }\n    }\n\n    /**\n     * `TDEC B2DY`\n     * @returns {0 | 1}\n     */\n    tdecB2DY() {\n        if (this.y === 0) {\n            return 0;\n        } else {\n            this.y--;\n            return 1;\n        }\n    }\n\n    /**\n     * `READ B2D`\n     * @returns {0 | 1}\n     */\n    read() {\n        const arrayY = this.array[this.y];\n        if (arrayY === undefined) {\n            internalError();\n        }\n        const value = arrayY[this.x];\n        if (value === undefined) {\n            internalError();\n        }\n        arrayY[this.x] = 0;\n        return value;\n    }\n\n    /**\n     * `SET B2D`\n     * @returns {void}\n     */\n    set() {\n        const arrayY = this.array[this.y] ?? internalError();\n        if (arrayY[this.x] === 1) {\n            throw Error(\n                `SET B2D: Tried to set when it was already 1. x = ${this.x}, y = ${this.y}`,\n            );\n        }\n        arrayY[this.x] = 1;\n    }\n}\n", "// @ts-check\n\nimport { URegAction } from \"../actions/URegAction.js\";\nimport { U_INC, U_TDEC } from \"../action_consts/UReg_consts.js\";\nimport { internalError } from \"../internalError.js\";\n\n/**\n * Un: Sliding Block Register\n */\nexport class UReg {\n    constructor() {\n        /**\n         * @private\n         */\n        this.value = 0;\n    }\n\n    /**\n     * @param {URegAction} act\n     * @returns {0 | 1 | void}\n     */\n    action(act) {\n        switch (act.op) {\n            // INC  12414041\n            // TDEC 12437599\n            case U_TDEC: {\n                if (this.value === 0) {\n                    return 0;\n                } else {\n                    this.value--;\n                    return 1;\n                }\n            }\n            case U_INC: {\n                this.value++;\n            }\n        }\n    }\n\n    /**\n     * @param {URegAction} act\n     * @param {number} n\n     * @returns {0 | 1 | void}\n     */\n    actionN(act, n) {\n        switch (act.op) {\n            case U_TDEC: {\n                this.value -= n;\n                break;\n            }\n            case U_INC: {\n                this.value += n;\n                break;\n            }\n        }\n    }\n\n    /**\n     * @returns {number}\n     */\n    getValue() {\n        return this.value;\n    }\n\n    /**\n     * @param {number} v\n     */\n    setValue(v) {\n        this.value = v;\n    }\n\n    /**\n     * `INC Un`\n     * @returns {void}\n     */\n    inc() {\n        this.action(new URegAction(U_INC, 0)); // regNumber\u306F\u4EEE\n    }\n\n    /**\n     * `TDEC Un`\n     * @returns {0 | 1}\n     */\n    tdec() {\n        const res = this.action(new URegAction(U_TDEC, 0)); // regNumber\u306F\u4EEE\n        if (res === undefined) {\n            internalError();\n        }\n        return res;\n    }\n\n    /**\n     * @param {string} key\n     * @param {unknown} value\n     */\n    setByRegistersInit(key, value) {\n        if (\n            typeof value !== \"number\" || value < 0 || !Number.isInteger(value)\n        ) {\n            throwRegisterInitError(key, value);\n        }\n        this.setValue(value);\n    }\n}\n\n/**\n * @param {string} key\n * @param {unknown} value\n * @returns {never}\n */\nexport const throwRegisterInitError = (key, value) => {\n    const debugStr = `\"${key}\": ${JSON.stringify(value)}`;\n    throw Error(`Invalid #REGISTERS ${debugStr}`);\n};\n", "// @ts-check\n\nimport { BRegAction } from \"../actions/BRegAction.js\";\nimport { B_INC, B_READ, B_SET, B_TDEC } from \"../action_consts/BReg_consts.js\";\nimport { internalError } from \"../internalError.js\";\nimport { throwRegisterInitError } from \"./UReg.js\";\n\n/**\n * \u30D0\u30A4\u30CA\u30EA\u306E\u6587\u5B57\u5217\u30920\u30681\u306E\u914D\u5217\u306B\u5909\u63DB\u3059\u308B\n * @param {string} str `'01011'`\n * @returns {(0 | 1)[]} `[0, 1, 0, 1, 1]`\n * @throws\n */\nconst parseBits = (str) => {\n    return [...str].map((c) => {\n        if (c === \"0\") {\n            return 0;\n        } else if (c === \"1\") {\n            return 1;\n        } else {\n            throw Error(`Invalid #REGISTERS: \"${str}\"`);\n        }\n    });\n};\n\n/**\n * Bn: Binary Register\n */\nexport class BReg {\n    constructor() {\n        // invariant: this.pointer < this.bits.length\n        this.pointer = 0;\n\n        /**\n         * @private\n         * @type {(0 | 1)[]}\n         */\n        this.bits = [0];\n    }\n\n    /**\n     * @param {BRegAction} act\n     * @returns {0 | 1 | void}\n     */\n    action(act) {\n        // if (this.pointer >= this.bits.length) {\n        //     throw Error('failed');\n        // }\n        switch (act.op) {\n            // INC  3207502\n            // TDEC 3217502\n            // READ 3175344\n            // SET   406844\n            case B_TDEC: {\n                if (this.pointer === 0) {\n                    return 0;\n                } else {\n                    this.pointer--;\n                    return 1;\n                }\n            }\n            case B_INC: {\n                const newPointer = this.pointer + 1;\n                this.pointer = newPointer;\n                // using invariant\n                const bits = this.bits;\n                if (newPointer === bits.length) {\n                    bits.push(0);\n                }\n                break;\n            }\n            case B_READ: {\n                const pointer = this.pointer;\n                const bits = this.bits;\n                if (pointer < bits.length) {\n                    const value = bits[pointer] ?? internalError();\n                    bits[pointer] = 0;\n                    return value;\n                } else {\n                    return 0;\n                }\n            }\n            case B_SET: {\n                const bits = this.bits;\n                const pointer = this.pointer;\n                if (pointer >= bits.length) {\n                    this.extend();\n                }\n                const value = bits[pointer];\n                if (value === 1) {\n                    throw Error(\n                        `The bit of the binary register B${act.regNumber} is already 1`,\n                    );\n                }\n                bits[pointer] = 1;\n                break;\n            }\n            default: {\n                /** @type {never} */\n                const _ = act.op;\n            }\n        }\n    }\n\n    /**\n     * @param {BRegAction} act\n     * @param {number} n\n     */\n    actionN(act, n) {\n        switch (act.op) {\n            case B_INC: {\n                this.pointer += n;\n                this.extend();\n                break;\n            }\n            case B_TDEC: {\n                this.pointer -= n;\n                break;\n            }\n            default: {\n                throw Error(\"todo\");\n            }\n        }\n    }\n\n    /**\n     * @returns {(0 | 1)[]}\n     */\n    getBits() {\n        return this.bits;\n    }\n\n    /**\n     * @param {(0 | 1)[]} bits\n     */\n    setBits(bits) {\n        this.bits = bits;\n    }\n\n    /**\n     * `INC Bn`\n     * @returns {void}\n     */\n    inc() {\n        const value = this.action(new BRegAction(B_INC, 0)); // regNumber\u306F\u4EEE\n        if (value !== undefined) {\n            internalError();\n        }\n        return value;\n    }\n\n    /**\n     * `TDEC Bn`\n     * @returns {0 | 1}\n     */\n    tdec() {\n        const value = this.action(new BRegAction(B_TDEC, 0)); // regNumber\u306F\u4EEE\n        if (value === undefined) {\n            internalError();\n        }\n        return value;\n    }\n\n    /**\n     * `READ Bn`\n     * @returns {0 | 1}\n     */\n    read() {\n        const value = this.action(new BRegAction(B_READ, 0)); // regNumber\u306F\u4EEE\n        if (value === undefined) {\n            internalError();\n        }\n        return value;\n    }\n\n    /**\n     * `SET Bn`\n     * @returns {void}\n     */\n    set() {\n        const value = this.action(new BRegAction(B_SET, 0)); // regNumber\u306F\u4EEE\n        if (value !== undefined) {\n            internalError();\n        }\n        return value;\n    }\n\n    /**\n     * \u30DD\u30A4\u30F3\u30BF\u30FC\u306E\u7BC4\u56F2\u307E\u3067\u30E1\u30E2\u30EA\u3092\u5E83\u3052\u308B\n     */\n    extend() {\n        const pointer = this.pointer;\n        const bits = this.bits;\n        const len = bits.length;\n        if (pointer >= len) {\n            if (pointer === len) {\n                bits.push(0);\n            } else {\n                /**\n                 * @type {0[]}\n                 */\n                const rest = Array(pointer - len + 1).fill(0).map(() => 0);\n                this.bits = this.bits.concat(rest);\n            }\n        }\n    }\n\n    /**\n     * prefix\u3068suffix\u304Cslice\u3055\u308C\u3066\u3044\u308B\u3053\u3068\u306F\u4FDD\u8A3C\u3059\u308B\n     * @returns {{\n     *   prefix: (0 | 1)[];\n     *   head: 0 | 1;\n     *   suffix: (0 | 1)[];\n     * }}\n     */\n    toObject() {\n        this.extend();\n        const bits = this.bits;\n        const pointer = this.pointer;\n        return {\n            prefix: bits.slice(0, pointer),\n            head: bits[pointer] ?? internalError(),\n            suffix: bits.slice(pointer + 1),\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {unknown} value\n     */\n    setByRegistersInit(key, value) {\n        // \u6570\u5B57\u306E\u5834\u5408\u306E\u51E6\u7406\u306F\u6570\u5B57\u3092\u30D0\u30A4\u30CA\u30EA\u306B\u3057\u3066\u914D\u7F6E\u3059\u308B TODO \u5FC5\u8981\u304B\u78BA\u8A8D\n        if (typeof value === \"number\") {\n            this.setBits(parseBits(value.toString(2)).reverse());\n            this.extend();\n        } else if (!Array.isArray(value) || value.length !== 2) {\n            throwRegisterInitError(key, value);\n        } else {\n            const [value0, value1] = /** @type {unknown[]} */ (value);\n\n            if (\n                typeof value0 !== \"number\" || typeof value1 !== \"string\" ||\n                value0 < 0 || !Number.isInteger(value0)\n            ) {\n                throwRegisterInitError(key, value);\n            } else {\n                const bits = parseBits(value1);\n                this.pointer = value0;\n                this.setBits(bits);\n                this.extend();\n            }\n        }\n    }\n}\n", "// @ts-check\n\nimport { MUL_0, MUL_1 } from \"../action_consts/Mul_consts.js\";\nimport { MulAction } from \"../actions/MulAction.js\";\n\n/**\n * `MUL`\n */\nexport class MUL {\n    constructor() {\n        /**\n         * 0 ~ 31\n         * @private\n         */\n        this.value = 0;\n    }\n\n    /**\n     * @param {MulAction} act\n     * @returns {0 | 1}\n     */\n    action(act) {\n        switch (act.op) {\n            // MUL0 200740\n            // MUL1  21110\n            case MUL_0:\n                return this.mul0();\n            case MUL_1:\n                return this.mul1();\n            default:\n                throw Error(\"MUL: action\");\n        }\n    }\n\n    /**\n     * @returns {number}\n     */\n    getValue() {\n        return this.value;\n    }\n\n    /**\n     * @returns {0 | 1}\n     */\n    mul0() {\n        const value = this.value;\n        const r = value % 2;\n        this.value = value >> 1;\n        // @ts-ignore\n        return r;\n    }\n\n    /**\n     * @returns {0 | 1}\n     */\n    mul1() {\n        const value = this.value;\n        const r = value % 2;\n        if (value <= 21) {\n            // (x / 2) + 5\n            // (x + 10) / 2\n            this.value = (value >> 1) + 5;\n        } else {\n            this.value = (value - 22) >> 1;\n        }\n        // @ts-ignore\n        return r;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.value.toString(2).padStart(5, \"0\");\n    }\n}\n", "// @ts-check\n\n/**\n * `NOP`\n */\nexport class NOP {\n    constructor() {\n    }\n\n    /**\n     * \u6700\u9069\u5316\u306E\u305F\u3081\u5F15\u6570\u306A\u3057\n     * @returns {0}\n     */\n    action() {\n        return 0;\n    }\n}\n", "// @ts-check\n\nimport { OutputAction } from \"../actions/OutputAction.js\";\n\n/**\n * `OUTPUT x`\n */\nexport class OUTPUT {\n    #string = \"\";\n    constructor() {}\n\n    /**\n     * @param {OutputAction} act\n     * @returns {void}\n     */\n    action(act) {\n        this.output(act.digit);\n        return undefined;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getString() {\n        return this.#string;\n    }\n\n    /**\n     * @param {string} x\n     */\n    output(x) {\n        this.#string += x;\n    }\n}\n", "// @ts-check\n\nimport { SubAction } from \"../actions/SubAction.js\";\nimport { SUB_A1, SUB_B0, SUB_B1 } from \"../action_consts/Sub_consts.js\";\nimport { internalError } from \"../internalError.js\";\n\n/**\n * `SUB`\n */\nexport class SUB {\n    constructor() {\n        /**\n         * 0 ~ 31\n         * @private\n         */\n        this.value = 0;\n    }\n\n    /**\n     * @param {SubAction} act\n     */\n    action(act) {\n        switch (act.op) {\n            // A1  176960\n            // B0 1902824\n            // B1  172184\n            case SUB_B0:\n                return this.b0();\n            case SUB_A1:\n                return this.a1();\n            case SUB_B1:\n                return this.b1();\n            default:\n                internalError();\n        }\n    }\n\n    /**\n     * @returns {number}\n     */\n    getValue() {\n        return this.value;\n    }\n\n    /**\n     * `SUB A1`\n     * @returns {void}\n     */\n    a1() {\n        /**\n         * `-1` is `\"FAILURE\"`\n         */\n        // deno-fmt-ignore\n        const subLookupA1 =\n            [\n                3, 2, -1, -1, 7, 6, -1, -1, 11, 10, -1, -1, 15, 14, -1, -1,\n                19, 18, -1, -1, 23, 22, -1, -1, 27, 26, -1, -1, 31, 30, -1, -1\n            ];\n        const x = subLookupA1[this.value] ?? internalError();\n        if (x === -1) {\n            throw Error(\"SUB error: A1\");\n        }\n        this.value = x;\n    }\n\n    /**\n     * `SUB B0`\n     * @returns {0 | 1}\n     */\n    b0() {\n        const t = this.value % 2;\n        // deno-fmt-ignore\n        const subLookupB0 =\n            [\n                0, 0, 0, 0, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 17, 17,\n                17, 17, 0, 0, 17, 17, 17, 17, 0, 0, 17, 17, 17, 17, 17, 17\n            ];\n        this.value = subLookupB0[this.value] ?? internalError();\n        // @ts-ignore\n        return t;\n    }\n\n    /**\n     * `SUB B1`\n     * @returns {0 | 1}\n     */\n    b1() {\n        const t = 1 - this.value % 2;\n        // deno-fmt-ignore\n        const subLookupB1 =\n            [\n                17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 17, 17, 0, 0, 0, 0,\n                17, 17, 17, 17, 17, 17, 0, 0, 17, 17, 17, 17, 0, 0, 17, 17\n            ];\n        this.value = subLookupB1[this.value] ?? internalError();\n        // @ts-ignore\n        return t;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.value.toString(2).padStart(5, \"0\");\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringDetail() {\n        const str = this.toString();\n        return str.slice(0, 3) + \" stopper\" + str.slice(3, 4) +\n            \" bit\" + str.slice(4);\n    }\n}\n", "// @ts-check\n\nimport { LegacyTRegAction } from \"../actions/LegacyTRegAction.js\";\nimport {\n    T_DEC,\n    T_INC,\n    T_READ,\n    T_RESET,\n    T_SET,\n} from \"../action_consts/LegacyTReg_consts.js\";\nimport { internalError } from \"../internalError.js\";\n\n/**\n * Compatibility for APGsembly 1.0\n */\nexport class LegacyTReg {\n    constructor() {\n        /**\n         * @private\n         */\n        this.pointer = 0;\n\n        /**\n         * -1 is undefined\n         * @private\n         * @type {(0 | 1 | -1)[]}\n         */\n        this.bits = [0];\n    }\n\n    /**\n     * @param {LegacyTRegAction} act\n     * @returns {0 | 1 | void}\n     */\n    action(act) {\n        switch (act.op) {\n            case T_INC:\n                return this.inc();\n            case T_READ:\n                return this.read();\n            case T_DEC:\n                return this.dec();\n            case T_SET:\n                return this.set();\n            case T_RESET:\n                return this.reset();\n            default:\n                internalError();\n        }\n    }\n\n    getPointer() {\n        return this.pointer;\n    }\n\n    getBits() {\n        return this.bits;\n    }\n\n    /**\n     * `INC`\n     * @returns {0 | 1}\n     */\n    inc() {\n        const bits = this.bits;\n        if (this.pointer === bits.length - 1) {\n            bits.push(0);\n            this.pointer++;\n            return 0;\n        } else {\n            this.pointer++;\n            return 1;\n        }\n    }\n\n    /**\n     * `DEC`\n     * \u3082\u3057\u30D8\u30C3\u30C9\u304C\u4E00\u756A\u5DE6\u306B\u3042\u308C\u3070Z\u3092\u8FD4\u3059\u3002\n     * \u305D\u3046\u3067\u306A\u3051\u308C\u3070\u30D8\u30C3\u30C9\u3092\u623B\u3057\u3066NZ\u3092\u8FD4\u3059\u3002\n     */\n    dec() {\n        if (this.pointer === 0) {\n            return 0;\n        } else {\n            this.pointer--;\n            return 1;\n        }\n    }\n\n    /**\n     * `READ`\n     * \u73FE\u5728\u306E\u30D8\u30C3\u30C9\u306E\u4F4D\u7F6E\u306E\u5024\u304C0\u306E\u3068\u304D\u305D\u306E\u5024\u3092\u6D88\u53BB\u3057\u3066Z\u3092\u8FD4\u3059\u3002\n     * 1\u306E\u3068\u304D\u306E\u5024\u3092\u6D88\u53BB\u3057\u3066NZ\u3092\u8FD4\u3059\u3002\n     * \u305D\u3046\u3067\u306A\u3051\u308C\u3070\u30A8\u30E9\u30FC\n     * @returns {0 | 1}\n     */\n    read() {\n        const pointer = this.pointer;\n        const bits = this.bits;\n        const bit = bits[pointer];\n        if (bit === 0) {\n            bits[pointer] = -1;\n            return 0;\n        } else if (bit === 1) {\n            bits[pointer] = -1;\n            return 1;\n        } else if (bit === -1) {\n            throw Error(\"Error: reading empty space of T register\");\n        } else {\n            internalError();\n        }\n    }\n\n    /**\n     * `SET`\n     * @returns {void}\n     */\n    set() {\n        const pointer = this.pointer;\n        if (this.bits[pointer] === -1) {\n            this.bits[pointer] = 1;\n        } else {\n            throw Error(\"Error: SET to nonempty bit\");\n        }\n    }\n\n    /**\n     * `RESET`\n     * @returns {void}\n     */\n    reset() {\n        const pointer = this.pointer;\n        if (this.bits[pointer] === -1) {\n            this.bits[pointer] = 0;\n        } else {\n            throw Error(\"Error: RESET to nonempty bit\");\n        }\n    }\n}\n", "// @ts-check\n\nimport { Action } from \"./actions/Action.js\";\nimport { AddAction } from \"./actions/AddAction.js\";\nimport { B2DAction } from \"./actions/B2DAction.js\";\nimport { BRegAction } from \"./actions/BRegAction.js\";\nimport { HaltOutAction } from \"./actions/HaltOutAction.js\";\nimport { MulAction } from \"./actions/MulAction.js\";\nimport { NopAction } from \"./actions/NopAction.js\";\nimport { OutputAction } from \"./actions/OutputAction.js\";\nimport { SubAction } from \"./actions/SubAction.js\";\nimport { URegAction } from \"./actions/URegAction.js\";\nimport { LegacyTRegAction } from \"./actions/LegacyTRegAction.js\";\nimport { ADD } from \"./components/ADD.js\";\nimport { B2D } from \"./components/B2D.js\";\nimport { BReg } from \"./components/BReg.js\";\nimport { MUL } from \"./components/MUL.js\";\nimport { NOP } from \"./components/NOP.js\";\nimport { OUTPUT } from \"./components/OUTPUT.js\";\nimport { SUB } from \"./components/SUB.js\";\nimport { throwRegisterInitError, UReg } from \"./components/UReg.js\";\nimport { LegacyTReg } from \"./components/LegacyTReg.js\";\n\n/**\n * @param {\"B\" | \"U\" | \"T\"} type\n * @param {number} regNum\n * @returns {never}\n */\nconst throwNotFound = (type, regNum) => {\n    throw Error(`Register ${type}${regNum} is not found.`);\n};\n\nconst parseNum = Number.parseInt;\nconst isNaNLocal = Number.isNaN;\n\n/**\n * #REGISTERS\u306EJSON\n * U\u306E\u5834\u5408\u306Fnumber\u306E\u307F\n * B\u306E\u3068\u304D\u306F\u30DD\u30A4\u30F3\u30BF\u3068\u30D0\u30A4\u30CA\u30EA\u306E\u6587\u5B57\u5217\u306E\u914D\u5217\u3067\u3042\u308B\u5834\u5408\u306F\u305D\u306E\u307E\u307E\u8A2D\u5B9A\u3059\u308B\u3002\n * \u6570\u5B57\u3067\u3042\u308B\u5834\u5408\u306F\u4E8C\u9032\u6570\u306B\u5909\u63DB\u3057\u3066\u305D\u308C\u3092\u9006\u3055\u307E\u306B\u3057\u3066\u914D\u5217\u3078\u8A2D\u5B9A\u3059\u308B\u3002\u30DD\u30A4\u30F3\u30BF\u306F0\u3068\u3059\u308B\u3002TODO \u30B3\u30F3\u30D1\u30A4\u30E9\u3092\u78BA\u8A8D\n * @typedef {{ [reg: string]: unknown }} RegistersInit\n */\n\n/**\n * Execute an action\n */\nexport class ActionExecutor {\n    /**\n     * \u4F7F\u7528\u3059\u308B\u30EC\u30B8\u30B9\u30BF\u756A\u53F7\u3092\u5F15\u6570\u306B\u53D6\u308B\n     * @param {{\n     *    unary: ReadonlyArray<number>;\n     *    binary: ReadonlyArray<number>;\n     *    legacyT: ReadonlyArray<number>;\n     * }} param0\n     */\n    constructor(\n        { unary, binary, legacyT },\n    ) {\n        /**\n         * @readonly\n         */\n        this.uRegMap = new Map(\n            unary.map((n) => [n, new UReg()]),\n        );\n\n        /**\n         * @readonly\n         */\n        this.bRegMap = new Map(\n            binary.map((n) => [n, new BReg()]),\n        );\n\n        /**\n         * @readonly\n         */\n        this.legacyTRegMap = new Map(\n            legacyT.map((n) => [n, new LegacyTReg()]),\n        );\n\n        /**\n         * @readonly\n         */\n        this.add = new ADD();\n\n        /**\n         * @readonly\n         */\n        this.sub = new SUB();\n\n        /**\n         * @readonly\n         */\n        this.mul = new MUL();\n\n        /**\n         * @readonly\n         */\n        this.b2d = new B2D();\n\n        /**\n         * @readonly\n         */\n        this.output = new OUTPUT();\n\n        /**\n         * @readonly\n         */\n        this.nop = new NOP();\n    }\n\n    /**\n     * `#REGISTERS`\u306B\u3088\u308B\u521D\u671F\u5316\n     * @param {RegistersInit} regInit \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\n     * @throws \u4E0D\u6B63\u306A\u5F62\u5F0F\u306E\u5834\u5408\n     */\n    setByRegistersInit(regInit) {\n        for (const [key, value] of Object.entries(regInit)) {\n            this.#setKeyValue(key, value);\n        }\n    }\n\n    /**\n     * @param {Action} action\n     */\n    setCache(action) {\n        if (action instanceof BRegAction) {\n            action.registerCache = this.getBReg(action.regNumber);\n        } else if (action instanceof URegAction) {\n            action.registerCache = this.getUReg(action.regNumber);\n        }\n    }\n\n    /**\n     * @param {string} key\n     * @param {unknown} value\n     * @throws\n     */\n    #setKeyValue(key, value) {\n        if (key.startsWith(\"U\")) {\n            const n = parseNum(key.slice(1), 10);\n            if (isNaNLocal(n)) {\n                throwRegisterInitError(key, value);\n            }\n            const reg = this.getUReg(n);\n            if (reg === undefined) {\n                throw Error(\n                    `Invalid #REGISTERS: U${n} isn't used in the program`,\n                );\n            }\n            reg.setByRegistersInit(key, value);\n        } else if (key.startsWith(\"B\")) {\n            const n = parseNum(key.slice(1), 10);\n            if (isNaNLocal(n)) {\n                throwRegisterInitError(key, value);\n            }\n            const reg = this.getBReg(n);\n            if (reg === undefined) {\n                throw Error(\n                    `Invalid #REGISTERS: B${n} isn't used in the program`,\n                );\n            }\n            reg.setByRegistersInit(key, value);\n        } else {\n            throwRegisterInitError(key, value);\n        }\n    }\n\n    /**\n     * `-1`\u304C\u6B63\u5E38\u7D42\u4E86\n     * `-1` is HALT_OUT\n     * @param {Action} action\n     * @returns {0 | 1 | -1 | void}\n     * @throws\n     */\n    execAction(action) {\n        // pi calculator\n        // B   316273800\n        // U   311341639\n        // ADD  49761893\n        // MUL    407820\n        // SUB   2251968\n        // NOP   3771596\n        if (action instanceof BRegAction) {\n            const bReg = action.registerCache ??\n                this.bRegMap.get(action.regNumber) ??\n                throwNotFound(\"B\", action.regNumber);\n            return bReg.action(action);\n        } else if (action instanceof URegAction) {\n            const uReg = action.registerCache ??\n                this.uRegMap.get(action.regNumber) ??\n                throwNotFound(\"U\", action.regNumber);\n            return uReg.action(action);\n        } else if (action instanceof AddAction) {\n            return this.add.action(action);\n        } else if (action instanceof NopAction) {\n            return this.nop.action();\n        } else if (action instanceof SubAction) {\n            return this.sub.action(action);\n        } else if (action instanceof MulAction) {\n            return this.mul.action(action);\n        } else if (action instanceof B2DAction) {\n            return this.b2d.action(action);\n        } else if (action instanceof OutputAction) {\n            return this.output.action(action);\n        } else if (action instanceof HaltOutAction) {\n            return -1;\n        } else if (action instanceof LegacyTRegAction) {\n            const tReg = this.legacyTRegMap.get(action.regNumber) ??\n                throwNotFound(\"T\", action.regNumber);\n            return tReg.action(action);\n        }\n        throw Error(`execAction: unknown action ${action.pretty()}`);\n    }\n\n    /**\n     * `-1`\u304C\u6B63\u5E38\u7D42\u4E86\n     * `-1` is HALT_OUT\n     * @param {Action} action\n     * @param {number} n\n     * @returns {0 | 1 | -1 | void}\n     * @throws `action` not `URegAction`, `BRegAction`, or `HaltOutAction`\n     */\n    execActionN(action, n) {\n        if (action instanceof URegAction) {\n            const uReg = action.registerCache ??\n                this.uRegMap.get(action.regNumber) ??\n                throwNotFound(\"U\", action.regNumber);\n            return uReg.actionN(action, n);\n        } else if (action instanceof BRegAction) {\n            const bReg = action.registerCache ??\n                this.bRegMap.get(action.regNumber) ??\n                throwNotFound(\"B\", action.regNumber);\n            return bReg.actionN(action, n);\n        } else if (action instanceof HaltOutAction) {\n            return -1;\n        }\n        throw Error(`execActionN: ${action.pretty()}`);\n    }\n\n    /**\n     * Get unary register\n     * @param {number} n\n     * @returns {UReg | undefined}\n     */\n    getUReg(n) {\n        return this.uRegMap.get(n);\n    }\n\n    /**\n     * Get binary register\n     * @param {number} n\n     * @returns {BReg | undefined}\n     */\n    getBReg(n) {\n        return this.bRegMap.get(n);\n    }\n\n    addSubMulToUIString() {\n        return `\n        ADD = ${this.add.toStringDetail()},\n        SUB = ${this.sub.toStringDetail()},\n        MUL = ${this.mul.toString()}\n        `;\n    }\n}\n", "// @ts-check\n\nimport { Action } from \"../actions/Action.js\";\nimport { AddAction } from \"../actions/AddAction.js\";\nimport { B2DAction } from \"../actions/B2DAction.js\";\nimport { BRegAction } from \"../actions/BRegAction.js\";\nimport { HaltOutAction } from \"../actions/HaltOutAction.js\";\nimport { MulAction } from \"../actions/MulAction.js\";\nimport { NopAction } from \"../actions/NopAction.js\";\nimport { OutputAction } from \"../actions/OutputAction.js\";\nimport { SubAction } from \"../actions/SubAction.js\";\nimport { URegAction } from \"../actions/URegAction.js\";\nimport { LegacyTRegAction } from \"../actions/LegacyTRegAction.js\";\n\n/**\n * @type {((str: string) => Action | undefined)[]}\n */\nconst parsers = [\n    BRegAction.parse,\n    URegAction.parse,\n    B2DAction.parse,\n    NopAction.parse,\n    AddAction.parse,\n    MulAction.parse,\n    SubAction.parse,\n    OutputAction.parse,\n    HaltOutAction.parse,\n    LegacyTRegAction.parse,\n];\n\n/**\n * \u30A2\u30AF\u30B7\u30E7\u30F3\u3092\u30D1\u30FC\u30B9\u3059\u308B\n * @param {string} str\n * @returns {Action | undefined}\n */\nexport const parseAction = (str) => {\n    for (const parser of parsers) {\n        const result = parser(str);\n        if (result !== undefined) {\n            return result;\n        }\n    }\n\n    return undefined;\n};\n", "// @ts-check\n\n/**\n * @param {number | undefined} line\n * @returns {string}\n */\nexport const lineNumberMessage = (line) =>\n    line !== undefined ? ` at line ${line}` : \"\";\n", "// @ts-check\n\nimport { internalError } from \"../internalError.js\";\nimport { lineNumberMessage } from \"./message.js\";\n\n/**\n * @param {string} replacementsMapString `{ xx = 1; yy = 0; label = ADD_AB; next_state = MUL_BK0 }`\n * @param {number | undefined} line\n * @param {string} src original line\n * @param {'#DEFINE' | '#INSERT'} key\n * @returns {{ needle: string; replacement: string }[] | string} replacements or error message\n */\nexport function parseReplacements(replacementsMapString, line, src, key) {\n    replacementsMapString = replacementsMapString.trim();\n    if (!replacementsMapString.startsWith(\"{\")) {\n        return `Invalid line \"${src}\"${\n            lineNumberMessage(line)\n        }. ${key} replacements does not start with \"{\"`;\n    }\n    if (!replacementsMapString.endsWith(\"}\")) {\n        return `Invalid line \"${src}\"${\n            lineNumberMessage(line)\n        }. ${key} replacements does not end with \"}\"`;\n    }\n\n    try {\n        return replacementsMapString.slice(1, -1).slice().split(\";\").map(\n            (keyValueStr) => {\n                const keyValue = keyValueStr.trim().split(\"=\").map((x) =>\n                    x.trim()\n                );\n                if (keyValue.length != 2) {\n                    throw new Error(\n                        `Invalid line \"${src}\"${\n                            lineNumberMessage(line)\n                        }. #DEFINE invalid replacements`,\n                    );\n                }\n                return {\n                    needle: keyValue[0] ?? internalError(),\n                    replacement: keyValue[1] ?? internalError(),\n                };\n            },\n        );\n    } catch (error) {\n        return error instanceof Error ? error.message : internalError();\n    }\n}\n", "// @ts-check\n\nimport { Action } from \"./actions/Action.js\";\nimport { internalError } from \"./internalError.js\";\nimport { parseAction } from \"./parser/parseAction.js\";\nimport { lineNumberMessage } from \"./parser/message.js\";\nimport { parseReplacements } from \"./parser/parseReplacements.js\";\n\n/**\n * Name of initial state\n */\nexport const INITIAL_STATE = \"INITIAL\";\n\n/**\n * Represents a line of source code\n * @abstract\n */\nexport class ProgramLine {\n    /**\n     * Convert to string\n     * @abstract\n     * @returns {string}\n     */\n    pretty() {\n        return ``;\n    }\n}\n\n/**\n * `#COMPONENTS`\n */\nexport class ComponentsHeader extends ProgramLine {\n    /**\n     * @param {string} content\n     */\n    constructor(content) {\n        super();\n\n        /**\n         * @readonly\n         */\n        this.content = content;\n    }\n\n    /**\n     * @returns {string}\n     */\n    static get key() {\n        return \"#COMPONENTS\";\n    }\n\n    /**\n     * @returns {string}\n     * @override\n     */\n    pretty() {\n        return ComponentsHeader.key + \" \" + this.content;\n    }\n}\n\n/**\n * `#REGISTERS`\n */\nexport class RegistersHeader extends ProgramLine {\n    /**\n     * @param {string} content\n     */\n    constructor(content) {\n        super();\n\n        /**\n         * @readonly\n         */\n        this.content = content;\n    }\n\n    /**\n     * @returns {string}\n     */\n    static get key() {\n        return \"#REGISTERS\";\n    }\n\n    /**\n     * @override\n     * @returns {string}\n     */\n    pretty() {\n        return RegistersHeader.key + \" \" + this.content;\n    }\n}\n\n/**\n * @param {{ needle: string; replacement: string; }[]} reps\n */\nfunction prettyTemplateReplacement(reps) {\n    return (\"{ \" +\n        reps.map((x) => x.needle + \" = \" + x.replacement).join(\"; \") + \" }\");\n}\n\n/**\n * `#DEFINE`\n */\nexport class Define extends ProgramLine {\n    /**\n     * @param {string} name\n     * @param {{ needle: string; replacement: string }[]} defaultReplacements\n     */\n    constructor(name, defaultReplacements) {\n        super();\n        /**\n         * @readonly\n         */\n        this.name = name;\n        /**\n         * @readonly\n         */\n        this.defaultReplacements = defaultReplacements;\n    }\n\n    /**\n     * @returns {string}\n     */\n    static get key() {\n        return \"#DEFINE\";\n    }\n\n    /**\n     * @override\n     * @returns {string}\n     */\n    pretty() {\n        return Define.key + \" \" + this.name +\n            (this.defaultReplacements.length === 0\n                ? \"\"\n                : (\" \" + prettyTemplateReplacement(this.defaultReplacements)));\n    }\n}\n\n/**\n * `#ENDDEF`\n */\nexport class Enddef extends ProgramLine {\n    constructor() {\n        super();\n    }\n\n    /**\n     * @returns {string}\n     */\n    static get key() {\n        return \"#ENDDEF\";\n    }\n\n    /**\n     * @override\n     * @returns {string}\n     */\n    pretty() {\n        return Enddef.key;\n    }\n}\n\n/**\n * `#INSERT`\n */\nexport class Insert extends ProgramLine {\n    /**\n     * @param {string} templateName\n     * @param {{ needle: string; replacement: string }[]} replacements\n     */\n    constructor(templateName, replacements) {\n        super();\n        /**\n         * @readonly\n         */\n        this.templateName = templateName;\n        /**\n         * @readonly\n         */\n        this.replacements = replacements;\n    }\n\n    /**\n     * @returns {string}\n     */\n    static get key() {\n        return \"#INSERT\";\n    }\n\n    /**\n     * @override\n     * @returns {string}\n     */\n    pretty() {\n        return Insert.key + \" \" + this.templateName +\n            (this.replacements.length === 0\n                ? \"\"\n                : (\" \" + prettyTemplateReplacement(this.replacements)));\n    }\n}\n\n/**\n * `#INCLUDE`\n */\nexport class Include extends ProgramLine {\n    /**\n     * @param {string} filename\n     */\n    constructor(filename) {\n        super();\n        /**\n         * @readonly\n         */\n        this.filename = filename;\n    }\n\n    /**\n     * @returns {string}\n     */\n    static get key() {\n        return \"#INCLUDE\";\n    }\n\n    /**\n     * @override\n     * @returns {string}\n     */\n    pretty() {\n        return Insert.key + \" \" + this.filename;\n    }\n}\n\n/**\n * \u30B3\u30E1\u30F3\u30C8\n */\nexport class Comment extends ProgramLine {\n    /**\n     * @param {string} str with #\n     */\n    constructor(str) {\n        super();\n\n        /**\n         * @readonly\n         * @private\n         */\n        this.str = str;\n    }\n\n    /**\n     * \u30B7\u30E3\u30FC\u30D7\u3092\u542B\u3080\n     * @returns {string}\n     */\n    getString() {\n        return this.str;\n    }\n\n    /**\n     * @override\n     */\n    pretty() {\n        return this.getString();\n    }\n}\n\n/**\n * \u7A7A\u884C\n * Empty line\n */\nexport class EmptyLine extends ProgramLine {\n    constructor() {\n        super();\n    }\n\n    /**\n     * @override\n     */\n    pretty() {\n        return \"\";\n    }\n}\n\n/**\n * @param {string} inputStr\n * @returns {\"Z\" | \"NZ\" | \"ZZ\" | \"*\" | undefined}\n */\nconst parseInput = (inputStr) => {\n    switch (inputStr) {\n        case \"Z\":\n            return inputStr;\n        case \"NZ\":\n            return inputStr;\n        case \"ZZ\":\n            return inputStr;\n        case \"*\":\n            return inputStr;\n        default:\n            return undefined;\n    }\n};\n\n/**\n * A line of APGsembly program\n */\nexport class Command extends ProgramLine {\n    /**\n     * @param {{\n     *    state: string;\n     *    input: \"Z\" | \"NZ\" | \"ZZ\" | \"*\";\n     *    nextState: string;\n     *    actions: ReadonlyArray<Action>;\n     *    line?: number | undefined;\n     * }} param0\n     */\n    constructor({ state, input, nextState, actions, line }) {\n        super();\n\n        /**\n         * @readonly\n         */\n        this.state = state;\n\n        /**\n         * @readonly\n         */\n        this.input = input;\n\n        /**\n         * @readonly\n         */\n        this.nextState = nextState;\n\n        /**\n         * @type {ReadonlyArray<Action>}\n         * @readonly\n         */\n        this.actions = actions;\n\n        /**\n         * Line number (1-based)\n         * @readonly\n         */\n        this.line = line;\n\n        /**\n         * \u6587\u5B57\u5217\u8868\u73FE\u306E\u30AD\u30E3\u30C3\u30B7\u30E5\n         * input\u306E\u5F8C\u306E\u7A7A\u767D\u306F\u305A\u308C\u306A\u3044\u3088\u3046\u306B\u57CB\u3081\u3066\u3044\u308B\n         * @readonly\n         * @private\n         */\n        this._string = `${this.state}; ${this.input};${\n            \" \".repeat(2 - this.input.length)\n        } ${this.nextState}; ${this.actions.map((a) => a.pretty()).join(\", \")}`;\n    }\n\n    /**\n     * \u6587\u5B57\u5217\u5316\u3059\u308B\n     * @override\n     * @returns {string}\n     */\n    pretty() {\n        return this._string; // `${this.state}; ${this.input}; ${this.nextState}; ${this.actions.map(a => a.pretty()).join(\", \")}`;\n    }\n}\n\n/**\n * Parse a line of source code\n * @param {string} str\n * @param {number | undefined} [line] 1 based line number\n * @returns {ProgramLine | string} {@link ProgramLine} \u307E\u305F\u306F\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\n */\nexport const parseProgramLine = (str, line) => {\n    const trimmedStr = str.trim();\n    if (trimmedStr === \"\") {\n        return new EmptyLine();\n    }\n    if (trimmedStr.startsWith(\"#\")) {\n        // \u30D8\u30C3\u30C0\u30FC\u3092\u30D1\u30FC\u30B9\u3059\u308B\n        if (trimmedStr.startsWith(ComponentsHeader.key)) {\n            return new ComponentsHeader(\n                trimmedStr.slice(ComponentsHeader.key.length).trim(),\n            );\n        } else if (trimmedStr.startsWith(RegistersHeader.key)) {\n            return new RegistersHeader(\n                trimmedStr.slice(RegistersHeader.key.length).trim(),\n            );\n        } else if (trimmedStr.startsWith(Define.key)) {\n            const content = trimmedStr.slice(Define.key.length).trim();\n            if (content.length === 0) {\n                return `Invalid line \"${str}\"${\n                    lineNumberMessage(line)\n                }. #DEFINE needs a name.`;\n            }\n            /** @type {string} */\n            let name;\n            /** @type {{ needle: string; replacement: string }[]} */\n            let replacements = [];\n            const indexOfOpenBrace = content.indexOf(\"{\");\n            if (indexOfOpenBrace !== -1) {\n                name = content.slice(0, indexOfOpenBrace).trim();\n                const replacements_ = parseReplacements(\n                    content.slice(indexOfOpenBrace),\n                    line,\n                    str,\n                    \"#DEFINE\",\n                );\n                if (typeof replacements_ === \"string\") {\n                    return replacements_;\n                }\n                replacements = replacements_;\n            } else {\n                name = content;\n            }\n            return new Define(name, replacements ?? []);\n        } else if (trimmedStr.startsWith(Enddef.key)) {\n            return new Enddef();\n        } else if (trimmedStr.startsWith(Insert.key)) {\n            const content = trimmedStr.slice(Insert.key.length).trim();\n            if (content.length === 0) {\n                return `Invalid line \"${str}\"${\n                    lineNumberMessage(line)\n                }. #INSERT needs a name.`;\n            }\n            /** @type {string} */\n            let name;\n            /** @type {{ needle: string; replacement: string }[]} */\n            let replacements = [];\n            const indexOfOpenBrace = content.indexOf(\"{\");\n            if (indexOfOpenBrace !== -1) {\n                name = content.slice(0, indexOfOpenBrace).trim();\n                const replacements_ = parseReplacements(\n                    content.slice(indexOfOpenBrace),\n                    line,\n                    str,\n                    \"#INSERT\",\n                );\n                if (typeof replacements_ === \"string\") {\n                    return replacements_;\n                }\n                replacements = replacements_;\n            } else {\n                name = content;\n            }\n            return new Insert(name, replacements);\n        } else if (trimmedStr.startsWith(Include.key)) {\n            const filename = trimmedStr.slice(Include.key.length).trim();\n            if (filename === \"\") {\n                return `Invalid line \"${str}\"${\n                    lineNumberMessage(line)\n                }. #INCLUDE needs filename.`;\n            }\n            return new Include(filename);\n        }\n        return new Comment(str);\n    }\n    const withoutTrailingComment = trimmedStr.split(\"#\")[0] ?? \"\";\n\n    const array = withoutTrailingComment.split(/\\s*;\\s*/u);\n    if (array.length < 4) {\n        return `Invalid line \"${str}\"${lineNumberMessage(line)}`;\n    }\n    if (array.length > 4) {\n        if (array[4] === \"\") {\n            return `Extraneous semicolon \"${str}\"${lineNumberMessage(line)}`;\n        }\n        return `Invalid line \"${str}\"${lineNumberMessage(line)}`;\n    }\n    // assert: length of array is 4\n    const state = array[0] ?? internalError();\n    const inputStr = array[1] ?? internalError();\n    const nextState = array[2] ?? internalError();\n    const actionsStr = array[3] ?? internalError();\n    // Remove empty string\n    const actionStrs = actionsStr.trim().split(/\\s*,\\s*/u).filter((x) =>\n        x !== \"\"\n    );\n\n    /** @type {Action[]} */\n    const actions = [];\n    for (const actionsStr of actionStrs) {\n        const result = parseAction(actionsStr);\n        if (result === undefined) {\n            return `Unknown action \"${actionsStr}\" in \"${str}\"${\n                lineNumberMessage(line)\n            }`;\n        }\n        actions.push(result);\n    }\n\n    const input = parseInput(inputStr);\n    if (input === undefined) {\n        return `Unknown input \"${inputStr}\" in \"${str}\"${\n            lineNumberMessage(line)\n        }. Expect \"Z\", \"NZ\", \"ZZ\" or \"*\"`;\n    }\n\n    return new Command({\n        state: state,\n        input: input,\n        nextState: nextState,\n        actions: actions,\n        line: line,\n    });\n};\n\n/**\n * @param {Command} command\n * @returns {string}\n */\nexport const addLineNumber = (command) => lineNumberMessage(command.line);\n\n/**\n * @param {Command} command\n * @returns {string}\n */\nexport const commandWithLineNumber = (command) =>\n    `\"${command.pretty()}\"${addLineNumber(command)}`;\n", "// @ts-check\n\nimport { HaltOutAction } from \"../actions/HaltOutAction.js\";\nimport { addLineNumber, Command, commandWithLineNumber } from \"../Command.js\";\n\n/**\n * \u30A2\u30AF\u30B7\u30E7\u30F3\u304C\u5024\u3092\u4E00\u5EA6\u3060\u3051\u8FD4\u3059\u304B\u691C\u67FB\u3059\u308B\n * \u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8FD4\u5374\u3059\u308B\n * @param {Command} command\n * @returns {string | undefined}\n */\nexport const validateActionReturnOnceCommand = (command) => {\n    // FIXME: HALT_OUT\u304C\u542B\u307E\u308C\u308B\u5834\u5408\u306F\u4E00\u65E6\u7121\u8996\n    const actions = command.actions;\n    if (actions.some((x) => x instanceof HaltOutAction)) {\n        return undefined;\n    }\n\n    const valueReturnActions = actions.filter((x) => x.doesReturnValue());\n    if (valueReturnActions.length === 1) {\n        return undefined;\n    } else if (valueReturnActions.length === 0) {\n        return `Does not return a value in ${commandWithLineNumber(command)}`;\n    } else {\n        return `Does not contain exactly one action that returns a value in \"${command.pretty()}\": Actions that produce value are ${\n            valueReturnActions.map((x) => `\"${x.pretty()}\"`).join(\", \")\n        }${addLineNumber(command)}`;\n    }\n};\n", "// @ts-check\n\nimport { Command, commandWithLineNumber, INITIAL_STATE } from \"../Command.js\";\n\n/**\n * \u6B21\u306E\u72B6\u614B\u304C\u521D\u671F\u72B6\u614B\u3067\u306A\u3044\u304B\u691C\u67FB\u3059\u308B\n * \u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8FD4\u5374\u3059\u308B\n * @param {Command} command\n * @returns {string | undefined}\n */\nexport const validateNextStateIsNotINITIALCommand = (command) => {\n    if (command.nextState === INITIAL_STATE) {\n        return `Return to initial state in ${commandWithLineNumber(command)}`;\n    }\n    return undefined;\n};\n", "// @ts-check\n\nimport { Command, commandWithLineNumber } from \"../Command.js\";\n\n/**\n * \u540C\u3058\u30A2\u30AF\u30B7\u30E7\u30F3\u304C\u8907\u6570\u542B\u307E\u308C\u3066\u3044\u306A\u3044\u304B\u691C\u67FB\u3059\u308B\n * \u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8FD4\u5374\u3059\u308B\n * @param {Command} command\n * @returns {string | undefined}\n */\nexport const validateNoDuplicatedActionCommand = (command) => {\n    const actions = command.actions;\n    if (actions.length <= 1) {\n        return undefined;\n    }\n    const actionStrs = actions.map((x) => x.pretty());\n    actionStrs.sort();\n    const maxIndex = actionStrs.length - 1;\n    for (let i = 0; i < maxIndex; i++) {\n        const act1 = actionStrs[i];\n        const act2 = actionStrs[i + 1];\n        if (act1 === act2) {\n            return `Duplicated actions \"${act1}\" in ${\n                commandWithLineNumber(command)\n            }`;\n        }\n    }\n    return undefined;\n};\n", "// @ts-check\n\nimport { Command, commandWithLineNumber } from \"../Command.js\";\nimport { HaltOutAction } from \"../actions/HaltOutAction.js\";\nimport { internalError } from \"../internalError.js\";\n\n/**\n * \u30A2\u30AF\u30B7\u30E7\u30F3\u304C\u540C\u3058\u30B3\u30F3\u30DD\u30FC\u30CD\u30F3\u30C8\u3092\u4F7F\u7528\u3057\u3066\u3044\u306A\u3044\u304B\u691C\u67FB\u3059\u308B\n * \u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8FD4\u5374\u3059\u308B\n * @param {Command} command\n * @returns {string | undefined}\n */\nexport const validateNoSameComponentCommand = (command) => {\n    const actions = command.actions;\n\n    // HALT_OUT\u306E\u5834\u5408\u306F\u4E00\u65E6\u7121\u8996\n    // FIXME\n    if (actions.find((x) => x instanceof HaltOutAction) !== undefined) {\n        return undefined;\n    }\n\n    const len = actions.length;\n\n    if (len <= 1) {\n        return undefined;\n    }\n\n    for (let i = 0; i < len; i++) {\n        const a = actions[i] ?? internalError();\n        for (let j = i + 1; j < len; j++) {\n            const b = actions[j] ?? internalError();\n            if (a.isSameComponent(b)) {\n                return `Actions \"${a.pretty()}\" and \"${b.pretty()}\" use same component in ${\n                    commandWithLineNumber(command)\n                }`;\n            }\n        }\n    }\n    return undefined;\n};\n", "// @ts-check\n\nimport { Command } from \"../Command.js\";\nimport { internalError } from \"../internalError.js\";\n\n/**\n * @param {Command} command1\n * @param {Command | undefined} [command2]\n * @returns {string}\n */\nconst addLineNumberTwo = (command1, command2) => {\n    if (command1.line !== undefined && command2?.line !== undefined) {\n        return ` at line ${command1.line} and ${command2.line}`;\n    } else {\n        return \"\";\n    }\n};\n\n/**\n * Z\u3068NZ\u304C\u30DA\u30A2\u306B\u306A\u3063\u3066\u3044\u308B\u3053\u3068\u3092\u691C\u67FB\u3059\u308B\n * \u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8FD4\u5374\u3059\u308B\n * @param {ReadonlyArray<Command>} commands\n * @returns {string[] | undefined}\n */\nexport const validateZAndNZ = (commands) => {\n    if (commands.length === 0) {\n        return undefined;\n    }\n\n    /**\n     * @param {Command} c1\n     * @param {Command | undefined} [c2]\n     */\n    const errMsg = (c1, c2) =>\n        `Need Z line followed by NZ line in \"${c1.pretty()}\"${\n            addLineNumberTwo(c1, c2)\n        }`;\n\n    const lastIndex = commands.length - 1;\n\n    for (let i = 0; i < lastIndex; i++) {\n        const a = commands[i] ?? internalError();\n        const b = commands[i + 1] ?? internalError();\n        const inputA = a.input;\n        const inputB = b.input;\n        if (\n            // Z\u306A\u3089\u3070\u6B21\u304CNZ\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308B\n            (inputA === \"Z\" && inputB !== \"NZ\") ||\n            // NZ\u306A\u3089\u3070\u524D\u304CZ\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308B\n            (inputB === \"NZ\" && inputA !== \"Z\") ||\n            // Z\u306E\u6B21\u304CNZ\u306E\u6642\u3001\u5165\u529B\u72B6\u614B\u306F\u540C\u3058\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308B\n            (inputA === \"Z\" && inputB === \"NZ\" && a.state !== b.state)\n        ) {\n            return [errMsg(a, b)];\n        }\n    }\n\n    // \u6700\u5F8C\u306E\u884C\u304CZ\u3067\u7D42\u308F\u3063\u3066\u3044\u308B\u5834\u5408\n    const lastLine = commands[lastIndex];\n\n    if (lastLine?.input === \"Z\") {\n        return [errMsg(lastLine)];\n    }\n\n    return undefined;\n};\n", "// @ts-check\n\nimport {\n    Command,\n    Define,\n    Enddef,\n    parseProgramLine,\n    ProgramLine,\n} from \"./Command.js\";\nimport { internalError } from \"./internalError.js\";\n\n/**\n * \u30D7\u30ED\u30B0\u30E9\u30E0\u306E\u884C\u306E\u914D\u5217\n */\nexport class ProgramLines {\n    /**\n     * @param {ReadonlyArray<ProgramLine>} array\n     * @param {ReadonlyMap<string, { defaultReplacements: { needle: string; replacement: string }[]; lines: string[] }>} templates\n     */\n    constructor(array, templates = new Map()) {\n        /**\n         * @private\n         * @readonly\n         */\n        this.templates = templates;\n        /**\n         * @private\n         * @readonly\n         */\n        this.array = array;\n    }\n\n    /**\n     * @returns {ReadonlyArray<ProgramLine>}\n     */\n    getArray() {\n        return this.array;\n    }\n\n    /**\n     * @returns {ReadonlyMap<string, { defaultReplacements: { needle: string; replacement: string }[]; lines: string[] }>}\n     */\n    getTemplates() {\n        return this.templates;\n    }\n\n    /**\n     * @returns {string}\n     */\n    pretty() {\n        return this.array.map((line) => line.pretty()).join(\"\\n\");\n    }\n\n    /**\n     * Parse a source code\n     * @param {string} str\n     * @returns {ProgramLines | string} string is an error\n     */\n    static parse(str) {\n        const lines = str.split(/\\r\\n|\\n|\\r/u);\n\n        /**\n         * @type {string[]}\n         */\n        const errors = [];\n        /**\n         * @type {ProgramLine[]}\n         */\n        const programLines = [];\n\n        /**\n         * @type {Map<string, { defaultReplacements: { needle: string; replacement: string }[]; lines: string[] }>}\n         */\n        const templates = new Map();\n\n        /** @type {string | null} */\n        let activeTemplateName = null;\n        for (const [index, lineStr] of lines.entries()) {\n            if (activeTemplateName != null) {\n                if (lineStr.trimStart().startsWith(Enddef.key)) {\n                    const line = parseProgramLine(lineStr, index + 1);\n                    if (line instanceof Enddef) {\n                        activeTemplateName = null;\n                        continue;\n                    }\n                }\n                const template = templates.get(activeTemplateName);\n                if (template == null) {\n                    internalError();\n                }\n                template.lines.push(lineStr);\n                continue;\n            }\n            const line = parseProgramLine(lineStr, index + 1);\n            if (line instanceof Define) {\n                if (activeTemplateName != null) {\n                    // TODO: line number\n                    return `#DEFINE needs #ENDDEF ${line.pretty()}`;\n                }\n                activeTemplateName = line.name;\n                if (templates.has(activeTemplateName)) {\n                    return `#DEFINE duplicate template name ${line.pretty()}`;\n                }\n                templates.set(activeTemplateName, {\n                    defaultReplacements: line.defaultReplacements,\n                    lines: [],\n                });\n            } else if (line instanceof Enddef) {\n                return `#ENDDEF needs #DEFINE ${line.pretty()}`;\n            } else if (line instanceof ProgramLine) {\n                programLines.push(line);\n            } else if (typeof line === \"string\") {\n                errors.push(line);\n            } else {\n                internalError();\n            }\n        }\n\n        if (activeTemplateName != null) {\n            errors.push(`#DEFINE needs #ENDDEF. \"${activeTemplateName}\"`);\n        }\n\n        if (errors.length > 0) {\n            return errors.join(\"\\n\");\n        }\n\n        return new ProgramLines(programLines, templates);\n    }\n}\n\n/**\n * @param {ProgramLines} programLines\n */\nexport function format(programLines) {\n    const lines = programLines.getArray();\n    const commands = lines.flatMap((line) =>\n        line instanceof Command ? [line] : []\n    );\n    const maxStateName = commands.reduce(\n        (acc, x) => Math.max(acc, x.state.length),\n        0,\n    );\n    const maxNextStateName = commands.reduce(\n        (acc, x) => Math.max(acc, x.nextState.length),\n        0,\n    );\n\n    return lines.map((line) => {\n        if (line instanceof Command) {\n            const spaceState = maxStateName - line.state.length;\n            const inputSpace = 2 - line.input.length;\n            const nextStateSpace = maxNextStateName - line.nextState.length;\n            return `${line.state}; ${\" \".repeat(spaceState)}${line.input}; ${\n                \" \".repeat(inputSpace)\n            }${line.nextState}; ${\" \".repeat(nextStateSpace)}${\n                line.actions.map((a) => a.pretty()).join(\", \")\n            }`;\n        } else {\n            return line.pretty();\n        }\n    }).join(\"\\n\");\n}\n", "// @ts-check\n\nimport { Command } from \"./Command.js\";\n\nimport { validateNextStateIsNotINITIALCommand } from \"./validators/next_state_is_not_initial.js\";\nimport { validateNoDuplicatedActionCommand } from \"./validators/no_dup_action.js\";\nimport { validateActionReturnOnceCommand } from \"./validators/action_return_once.js\";\nimport { validateNoSameComponentCommand } from \"./validators/no_same_component.js\";\nimport { validateZAndNZ } from \"./validators/z_and_nz.js\";\n\n/**\n * \u5168\u3066\u306E\u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\u3092\u901A\u3059\n * @param {ReadonlyArray<Command>} commands\n * @returns {undefined | string} string is error\n */\nexport const validateAll = (commands) => {\n    /** @type {string[]} */\n    let errors = [];\n\n    {\n        /**\n         * @type {((_: Command) => string | undefined)[]}\n         */\n        const singleCommandValidators = [\n            validateNoDuplicatedActionCommand,\n            validateActionReturnOnceCommand,\n            validateNoSameComponentCommand,\n            validateNextStateIsNotINITIALCommand,\n        ];\n\n        for (const command of commands) {\n            for (const validator of singleCommandValidators) {\n                const errorOrUndefined = validator(command);\n                if (typeof errorOrUndefined === \"string\") {\n                    errors.push(errorOrUndefined);\n                }\n            }\n        }\n    }\n\n    {\n        /**\n         * @type {((_: ReadonlyArray<Command>) => string[] | undefined)[]}\n         */\n        const validators = [validateZAndNZ];\n\n        for (const validator of validators) {\n            const errorsOrUndefined = validator(commands);\n            if (errorsOrUndefined !== undefined) {\n                errors = errors.concat(errorsOrUndefined);\n            }\n        }\n    }\n\n    if (errors.length > 0) {\n        return errors.join(\"\\n\");\n    }\n\n    return undefined;\n};\n", "// @ts-check\n\nimport { Command, Include, Insert } from \"./Command.js\";\nimport { internalError } from \"./internalError.js\";\nimport { ProgramLines } from \"./ProgramLines.js\";\n\n/**\n *\n * @param {string} templateLine\n * @param {{\n    defaultReplacements: {\n        needle: string;\n        replacement: string;\n    }[];\n    lines: string[];\n}} template\n * @param {{\n        needle: string;\n        replacement: string;\n    }[]} insertReplacements\n * @returns {string}\n */\nfunction replaceTemplate(templateLine, template, insertReplacements) {\n    let replacedStr = templateLine;\n    for (const reps of insertReplacements) {\n        replacedStr = replacedStr.replaceAll(\n            reps.needle,\n            reps.replacement,\n        );\n    }\n    for (const reps of template.defaultReplacements) {\n        replacedStr = replacedStr.replaceAll(\n            reps.needle,\n            reps.replacement,\n        );\n    }\n    return replacedStr;\n}\n\n/**\n * @param {ProgramLines} programLines\n * @param {{ name: string; programLines: ProgramLines }[]} libraries\n * @returns {Command[]}\n */\nexport function expandTemplate(programLines, libraries) {\n    /**\n     * @type {Command[]}\n     */\n    const commands = [];\n\n    const templates = new Map(programLines.getTemplates().entries());\n\n    const lines = programLines.getArray().slice().reverse();\n\n    /**\n     * @param {ProgramLines} newLines\n     */\n    function addLines(newLines) {\n        const addArray = newLines.getArray();\n        for (let i = addArray.length - 1; i >= 0; i--) {\n            lines.push(addArray[i] ?? internalError());\n        }\n        for (\n            const [newTemplateName, newTemplate] of newLines\n                .getTemplates()\n        ) {\n            if (templates.get(newTemplateName) != null) {\n                throw new Error(\n                    `#DEFINE duplicate template name \"${newTemplateName}\"`,\n                );\n            }\n            templates.set(newTemplateName, newTemplate);\n        }\n    }\n\n    while (lines.length >= 1) {\n        const line = lines.pop();\n        if (line instanceof Command) {\n            commands.push(line);\n        } else if (line instanceof Include) {\n            const file = libraries.find((x) => x.name === line.filename);\n            if (file == null) {\n                throw new Error(\n                    `#INCLUDE file not found: \"${line.filename}\". Add a library file.`,\n                );\n            }\n            addLines(file.programLines);\n        } else if (line instanceof Insert) {\n            const template = templates.get(line.templateName);\n            if (template == null) {\n                throw new Error(\n                    `Undefined template: \"${line.templateName}\" at line \"${line.pretty()}\"`,\n                );\n            }\n            const replacedSource = template.lines.map((templateLine) =>\n                replaceTemplate(templateLine, template, line.replacements)\n            ).join(\"\\n\");\n            const newProgramLines = ProgramLines.parse(replacedSource);\n            if (typeof newProgramLines === \"string\") {\n                throw new Error(newProgramLines);\n            }\n            addLines(newProgramLines);\n        }\n    }\n\n    return commands;\n}\n", "// @ts-check\n\nconst CLOCK_PREFIX = \"CLOCK-2^\";\n\n/**\n * @param {string} content `B0-5, U0-5, U8-9, ADD, SUB, MUL, OUTPUT`\n * @returns {string[]} `[\"B0\", \"B1\", \"B2\", ..., \"OUTPUT\"]`\n */\nexport function parseComponentsHeader(content) {\n    /** @type {string[]} */\n    const components = [];\n    const strArray = content.split(\",\").map((x) => x.trim());\n    for (const str of strArray) {\n        if (str === \"...\") {\n            continue;\n        }\n        if (str === \"NOP\" || str === \"HALT_OUT\") {\n            continue;\n        }\n        if (\n            str === \"OUTPUT\" || str === \"B2D\" || str === \"ADD\" ||\n            str === \"SUB\" || str === \"MUL\"\n        ) {\n            components.push(str);\n        } else if (str.startsWith(CLOCK_PREFIX)) {\n            const _clockPeriod = Number(str.slice(CLOCK_PREFIX.length));\n        } else if (str.startsWith(\"B\")) {\n            const numList = parseRange(str.slice(1));\n            for (const x of numList.map((x) => `B${x}`)) {\n                components.push(x);\n            }\n        } else if (str.startsWith(\"U\")) {\n            const numList = parseRange(str.slice(1));\n            for (const x of numList.map((x) => `U${x}`)) {\n                components.push(x);\n            }\n        }\n    }\n\n    return components;\n}\n\n/**\n * @param {string} rangeStr `0`, `0-6`\n * @returns {number[]}\n */\nfunction parseRange(rangeStr) {\n    const range = rangeStr.split(\"-\");\n    if (range.length === 1) {\n        if (range[0]?.length === 0) {\n            throw new Error(\"Invalid #COMPONENTS\");\n        }\n        const num = Number(range[0]);\n        if (Number.isNaN(num)) {\n            throw new Error(\"Invalid #COMPONENTS\");\n        }\n        return [num];\n    } else if (range.length === 2) {\n        if (range.some((x) => x.length === 0)) {\n            throw new Error(\"Invalid #COMPONENTS\");\n        }\n        const [start, end] = range.map((x) => Number(x));\n        if (\n            start == null || end == null || Number.isNaN(start) ||\n            Number.isNaN(end)\n        ) {\n            throw new Error(\"Invalid #COMPONENTS\");\n        }\n        const res = [];\n        for (let i = start; i < end + 1; i++) {\n            res.push(i);\n        }\n        return res;\n    }\n\n    throw new Error(\"Invalid #COMPONENTS\");\n}\n", "// @ts-check\n\nimport { Command, ComponentsHeader, RegistersHeader } from \"./Command.js\";\nimport { Action } from \"./actions/Action.js\";\nimport { BRegAction } from \"./actions/BRegAction.js\";\nimport { LegacyTRegAction } from \"./actions/LegacyTRegAction.js\";\nimport { URegAction } from \"./actions/URegAction.js\";\nimport { ProgramLines } from \"./ProgramLines.js\";\nimport { validateAll } from \"./validate.js\";\nimport { expandTemplate } from \"./expandTemplate.js\";\nimport { AddAction } from \"./actions/AddAction.js\";\nimport { MulAction } from \"./actions/MulAction.js\";\nimport { SubAction } from \"./actions/SubAction.js\";\nimport { B2DAction } from \"./actions/B2DAction.js\";\nimport { OutputAction } from \"./actions/OutputAction.js\";\nimport { parseComponentsHeader } from \"./parser/parseComponentsHeader.js\";\nimport { internalError } from \"./internalError.js\";\n\n/**\n * APGsembly program\n */\nexport class Program {\n    /**\n     * @param {ReadonlyArray<Command>} commands\n     * @param {ComponentsHeader[]} componentsHeaders\n     * @param {RegistersHeader[]} registersHeaders\n     * @throw Error\n     */\n    constructor(commands, componentsHeaders, registersHeaders) {\n        /**\n         * @readonly\n         * @type {ReadonlyArray<Command>}\n         */\n        this.commands = commands;\n\n        /**\n         * @readonly\n         * @type {ComponentsHeader[]}\n         */\n        this.componentsHeader = componentsHeaders;\n\n        /**\n         * @readonly\n         * @type {RegistersHeader[]}\n         */\n        this.registersHeader = registersHeaders;\n    }\n\n    /**\n     * \u30D7\u30ED\u30B0\u30E9\u30E0\u307E\u305F\u306F\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\n     * Program or error message\n     * @param {string} str\n     * @param {{ noValidate?: boolean, libraryFiles?: { name: string; content: string }[] }} param1\n     * @returns {Program | string}\n     */\n    static parse(str, { noValidate, libraryFiles } = {}) {\n        const programLines = ProgramLines.parse(str);\n        if (typeof programLines === \"string\") {\n            return programLines;\n        }\n\n        /** @type {{ name: string; programLines: ProgramLines }[]} */\n        const libraries = [];\n        for (const libraryFile of libraryFiles ?? []) {\n            const libraryProgramLines = ProgramLines.parse(libraryFile.content);\n            if (typeof libraryProgramLines === \"string\") {\n                return libraryProgramLines;\n            }\n            libraries.push({\n                name: libraryFile.name,\n                programLines: libraryProgramLines,\n            });\n        }\n\n        /** @type {Command[]} */\n        const commands = expandTemplate(programLines, libraries);\n        // validation\n        if (!noValidate) {\n            if (commands.length === 0) {\n                return \"Program is empty\";\n            }\n\n            const errorOrUndefined = validateAll(commands);\n            if (typeof errorOrUndefined === \"string\") {\n                return errorOrUndefined;\n            }\n        }\n\n        return new Program(\n            commands,\n            programLines.getArray().flatMap((x) => {\n                return x instanceof ComponentsHeader ? [x] : [];\n            }),\n            programLines.getArray().flatMap((x) => {\n                return x instanceof RegistersHeader ? [x] : [];\n            }),\n        );\n    }\n}\n\n/**\n * \u8981\u7D20\u3092\u4E00\u610F\u306B\u3057\u3066\u30BD\u30FC\u30C8\u3059\u308B\n * @param {number[]} array\n * @returns {number[]}\n */\nconst sortNub = (array) => {\n    return [...new Set(array)].sort((a, b) => a - b);\n};\n\n/**\n * @typedef {{\n * unary: number[],\n * binary: number[],\n * legacyT: number[],\n * hasAdd: boolean,\n * hasSub: boolean,\n * hasMul: boolean,\n * hasB2D: boolean,\n * hasOutput: boolean, }} AnalyzeProgramResult\n */\n\n/**\n * \u30D7\u30ED\u30B0\u30E9\u30E0\u304B\u3089\u4F7F\u7528\u3055\u308C\u3066\u3044\u308B\u30EC\u30B8\u30B9\u30BF\u756A\u53F7\u3092\u62BD\u51FA\n * @param {Program} program\n * @returns {AnalyzeProgramResult}\n */\nexport const analyzeProgram = (program) => {\n    /** @type {readonly Action[]} */\n    const actions = program.commands.flatMap((command) => command.actions);\n\n    /**\n     * @template {Action & { regNumber: number }} T\n     * @param {new (...args: any[]) => T} klass\n     * @returns {number[]}\n     */\n    const getNumbers = (klass) => {\n        return sortNub(actions.flatMap(\n            (action) => action instanceof klass ? [action.regNumber] : [],\n        ));\n    };\n\n    let hasAdd = false;\n    let hasSub = false;\n    let hasMul = false;\n    let hasB2D = false;\n    let hasOutput = false;\n\n    for (const action of actions) {\n        if (action instanceof AddAction) {\n            hasAdd = true;\n        } else if (action instanceof SubAction) {\n            hasSub = true;\n        } else if (action instanceof MulAction) {\n            hasMul = true;\n        } else if (action instanceof B2DAction) {\n            hasB2D = true;\n        } else if (action instanceof OutputAction) {\n            hasOutput = true;\n        }\n    }\n\n    return {\n        unary: getNumbers(URegAction),\n        binary: getNumbers(BRegAction),\n        legacyT: getNumbers(LegacyTRegAction),\n        hasAdd,\n        hasSub,\n        hasMul,\n        hasB2D,\n        hasOutput,\n    };\n};\n\n/**\n * @param {ComponentsHeader[]} componentsHeaders\n * @param {AnalyzeProgramResult} analyzeResult\n */\nexport const validateComponentsHeader = (componentsHeaders, analyzeResult) => {\n    /** @type {string[]} */\n    const errors = [];\n    const components = new Set(\n        componentsHeaders.flatMap((c) => parseComponentsHeader(c.content)),\n    );\n\n    if (analyzeResult.hasAdd) {\n        if (!components.has(\"ADD\")) {\n            errors.push(\n                \"Program uses ADD component but the #COMPONENTS header does not include it.\",\n            );\n        }\n    }\n\n    if (analyzeResult.hasSub) {\n        if (!components.has(\"SUB\")) {\n            errors.push(\n                \"Program uses SUB component but the #COMPONENTS header does not include it.\",\n            );\n        }\n    }\n\n    if (analyzeResult.hasMul) {\n        if (!components.has(\"MUL\")) {\n            errors.push(\n                \"Program uses MUL component but the #COMPONENTS header does not include it.\",\n            );\n        }\n    }\n\n    if (analyzeResult.hasB2D) {\n        if (!components.has(\"B2D\")) {\n            errors.push(\n                \"Program uses B2D component but the #COMPONENTS header does not include it.\",\n            );\n        }\n    }\n\n    if (analyzeResult.hasOutput) {\n        if (!components.has(\"OUTPUT\")) {\n            errors.push(\n                \"Program uses OUTPUT component but the #COMPONENTS header does not include it.\",\n            );\n        }\n    }\n\n    /** @type {number[]} */\n    const neededUnary = [];\n    for (const u of analyzeResult.unary) {\n        if (!components.has(\"U\" + u)) {\n            neededUnary.push(u);\n        }\n    }\n\n    if (neededUnary.length > 0) {\n        errors.push(\n            `Program uses ${\n                neededUnary.map((u) => \"U\" + u).join(\", \")\n            } component${\n                neededUnary.length === 1 ? \"\" : \"s\"\n            } but the #COMPONENTS header does not include it.`,\n        );\n    }\n\n    /** @type {number[]} */\n    const neededBinary = [];\n    for (const b of analyzeResult.binary) {\n        if (!components.has(\"B\" + b)) {\n            neededBinary.push(b);\n        }\n    }\n\n    if (neededBinary.length > 0) {\n        errors.push(\n            `Program uses ${\n                neededBinary.map((u) => \"B\" + u).join(\", \")\n            } component${\n                neededBinary.length === 1 ? \"\" : \"s\"\n            } but the #COMPONENTS header does not include it.`,\n        );\n    }\n\n    if (errors.length !== 0) {\n        throw new Error(errors.join(\"\\n\"));\n    }\n};\n\n/**\n * @param {number[]} arr sorted\n * @returns {string[]}\n */\nfunction compactRanges(arr) {\n    if (arr.length === 0) {\n        return [];\n    }\n    const result = [];\n    let start = arr[0];\n    let end = arr[0] ?? internalError();\n    const len = arr.length;\n\n    for (let i = 1; i < len; i++) {\n        const item = arr[i] ?? internalError();\n        if (item === end + 1) {\n            end = item;\n        } else {\n            result.push(start === end ? `${start}` : `${start}-${end}`);\n            start = item;\n            end = item;\n        }\n    }\n\n    result.push(start === end ? `${start}` : `${start}-${end}`);\n    return result;\n}\n\n/**\n * Generate #COMPONENTS header content\n * @param {AnalyzeProgramResult} analyzeResult\n * @returns {string}\n */\nexport const generateComponentsHeader = (analyzeResult) => {\n    /** @type {string[]} */\n    let components = [];\n\n    if (analyzeResult.hasB2D) {\n        components.push(\"B2D\");\n    }\n\n    const binary = analyzeResult.binary.slice().sort((a, b) => a - b);\n    components = components.concat(compactRanges(binary).map((x) => \"B\" + x));\n\n    const unary = analyzeResult.unary.slice().sort((a, b) => a - b);\n    components = components.concat(compactRanges(unary).map((x) => \"U\" + x));\n\n    if (analyzeResult.hasAdd) {\n        components.push(\"ADD\");\n    }\n\n    if (analyzeResult.hasSub) {\n        components.push(\"SUB\");\n    }\n\n    if (analyzeResult.hasMul) {\n        components.push(\"MUL\");\n    }\n\n    if (analyzeResult.hasOutput) {\n        components.push(\"OUTPUT\");\n    }\n\n    return components.join(\", \");\n};\n", "// @ts-check\n\nimport { addLineNumber, Command } from \"./Command.js\";\nimport { Action } from \"./actions/Action.js\";\nimport { BRegAction } from \"./actions/BRegAction.js\";\nimport { B_INC, B_TDEC } from \"./action_consts/BReg_consts.js\";\nimport { URegAction } from \"./actions/URegAction.js\";\nimport { U_TDEC } from \"./action_consts/UReg_consts.js\";\nimport { HaltOutAction } from \"./exports.js\";\nimport { internalError } from \"./internalError.js\";\n\n/**\n * @param {Action} action\n * @returns {boolean}\n */\nconst isBInc = (action) => {\n    return action instanceof BRegAction && action.op === B_INC;\n};\n\n/**\n * @param {Action} action\n * @returns {boolean}\n */\nconst isUTdec = (action) => {\n    return action instanceof URegAction && action.op === U_TDEC;\n};\n\n/**\n * @param {Command} command\n * @returns {undefined | { readonly tdecU: URegAction }}\n */\nconst getOptimizedTdecU = (command) => {\n    // - \u524D\u306E\u5165\u529B\u304CNZ\u3067\u3042\u308B\u3053\u3068\n    // - \u6B21\u306E\u72B6\u614B\u304C\u81EA\u5206\u81EA\u8EAB\u3067\u3042\u308B\u3053\u3068\n    // - HALT_OUT\u3092\u542B\u307E\u306A\u3044\u3053\u3068\n    // - Action\u306FU\u307E\u305F\u306FB_INC\u306E\u307F\u3067\u3042\u308B\u3053\u3068\n    if (\n        command.input === \"NZ\" &&\n        command.state === command.nextState &&\n        command.actions.every((action) => !(action instanceof HaltOutAction)) &&\n        command.actions.every((action) =>\n            action instanceof URegAction ||\n            isBInc(action)\n        )\n    ) {\n        // TDEC\u306F2\u3064\u4EE5\u4E0A\u5165\u3089\u306A\u3044\u305F\u3081\u6700\u521D\u3092\u53D6\u5F97\u3067\u3088\u3044\n        const tdecU = command.actions.find(isUTdec);\n        if (tdecU && tdecU instanceof URegAction) {\n            return { tdecU };\n        }\n    }\n\n    return undefined;\n};\n\n/**\n * @param {Command} command\n * @returns {undefined | { readonly tdecB: BRegAction }}\n */\nconst getOptimizedTdecB = (command) => {\n    // - \u524D\u306E\u5165\u529B\u304CNZ\u3067\u3042\u308B\u3053\u3068\n    // - \u6B21\u306E\u72B6\u614B\u304C\u81EA\u5206\u81EA\u8EAB\u3067\u3042\u308B\u3053\u3068\n    // - HALT_OUT\u3092\u542B\u307E\u306A\u3044\u3053\u3068\n    // - Action\u306FTDEC B\u306E\u307F\u3067\u3042\u308B\u3053\u3068\n    if (\n        command.input === \"NZ\" &&\n        command.state === command.nextState &&\n        command.actions.every((action) => !(action instanceof HaltOutAction)) &&\n        command.actions.length === 1 &&\n        command.actions.every((action) => action instanceof BRegAction)\n    ) {\n        // TDEC\u306F2\u3064\u4EE5\u4E0A\u5165\u3089\u306A\u3044\u305F\u3081\u6700\u521D\u3092\u53D6\u5F97\u3067\u3088\u3044\n        const tdecB = command.actions.find((action) =>\n            action instanceof BRegAction && action.op === B_TDEC\n        );\n        if (tdecB && tdecB instanceof BRegAction) {\n            return { tdecB };\n        }\n    }\n\n    return undefined;\n};\n\n/**\n * \u30B3\u30DE\u30F3\u30C9\u3068\u6B21\u306E\u72B6\u614B\n */\nexport class CompiledCommandWithNextState {\n    /**\n     * @param {Command} command\n     * @param {number} nextState\n     */\n    constructor(command, nextState) {\n        /**\n         * @readonly\n         */\n        this.command = command;\n\n        /**\n         * \u6B21\u306E\u72B6\u614B\u306E\u6DFB\u5B57\n         * @readonly\n         */\n        this.nextState = nextState;\n\n        this.tdecuOptimize = getOptimizedTdecU(command);\n        this.tdecbOptimize = getOptimizedTdecB(command);\n    }\n}\n\nexport class CompiledCommand {\n    /**\n     * @param {CompiledCommandWithNextState | undefined} z Z\u306E\u5834\u5408\n     * @param {CompiledCommandWithNextState | undefined} nz NZ\u306E\u5834\u5408\n     */\n    constructor(z, nz) {\n        /**\n         * Z\u306E\u5834\u5408\n         */\n        this.z = z;\n\n        /**\n         * NZ\u306E\u5834\u5408\n         */\n        this.nz = nz;\n    }\n}\n\n/**\n * @param {Command} oldCommand\n * @param {Command} command\n */\nconst throwDuplicated = (oldCommand, command) => {\n    throw Error(\n        `Duplicated command: \"${oldCommand.pretty()}\" and \"${command.pretty()}\"${\n            addLineNumber(command)\n        }`,\n    );\n};\n\n/**\n * \u901F\u304F\u5B9F\u884C\u3067\u304D\u308B\u5F62\u5F0F\u3078\u5909\u63DB\u3059\u308B\n * @param {ReadonlyArray<Command>} commands\n * @returns {{\n *   readonly states: string[];\n *   readonly stateMap: Map<string, number>;\n *   readonly lookup: CompiledCommand[];\n * }}\n */\nexport const commandsToLookupTable = (commands) => {\n    /**\n     * \u72B6\u614B\u540D\u304B\u3089\u6DFB\u5B57\u3078\u306EMap\n     * @type {Map<string, number>}\n     */\n    const stateMap = new Map();\n\n    /** @type {CompiledCommand[]} */\n    const lookup = [];\n\n    // lookup\u3092\u521D\u671F\u5316\n    for (const command of commands) {\n        // \u8A18\u9332\u3055\u308C\u3066\u3044\u306A\u3044\u5834\u5408\u8FFD\u52A0\n        if (!stateMap.has(command.state)) {\n            stateMap.set(command.state, stateMap.size);\n            lookup.push(new CompiledCommand(undefined, undefined));\n        }\n    }\n\n    for (const command of commands) {\n        const compiledCommand =\n            lookup[stateMap.get(command.state) ?? internalError()] ??\n                internalError();\n        const nextState = stateMap.get(command.nextState);\n        // \u6B21\u306E\u72B6\u614B\u304C\u898B\u3064\u304B\u3089\u306A\u3044\u5834\u5408\u306F\u30A8\u30E9\u30FC\n        if (nextState === undefined) {\n            throw Error(\n                `Unknown state: \"${command.nextState}\" at \"${command.pretty()}\"${\n                    addLineNumber(command)\n                }`,\n            );\n        }\n\n        switch (command.input) {\n            case \"Z\": {\n                if (compiledCommand.z === undefined) {\n                    // \u65B0\u3057\u304F\u4F5C\u6210\u3059\u308B\n                    compiledCommand.z = new CompiledCommandWithNextState(\n                        command,\n                        nextState,\n                    );\n                } else {\n                    throwDuplicated(compiledCommand.z.command, command);\n                }\n                break;\n            }\n            case \"NZ\": {\n                if (compiledCommand.nz === undefined) {\n                    // \u65B0\u3057\u304F\u4F5C\u6210\u3059\u308B\n                    compiledCommand.nz = new CompiledCommandWithNextState(\n                        command,\n                        nextState,\n                    );\n                } else {\n                    throwDuplicated(compiledCommand.nz.command, command);\n                }\n                break;\n            }\n            case \"ZZ\": {\n                if (compiledCommand.nz !== undefined) {\n                    throw Error(\n                        `Invalid input: ZZ with NZ or *: \"${command.pretty()}\" and \"${compiledCommand.nz.command.pretty()}\"${\n                            addLineNumber(command)\n                        }`,\n                    );\n                } else if (compiledCommand.z === undefined) {\n                    compiledCommand.z = new CompiledCommandWithNextState(\n                        command,\n                        nextState,\n                    );\n                } else {\n                    throwDuplicated(compiledCommand.z.command, command);\n                }\n                break;\n            }\n            case \"*\": {\n                if (compiledCommand.nz !== undefined) {\n                    throw Error(\n                        `Invalid input: * \"${command.pretty()}\" and \"${compiledCommand.nz.command.pretty()}\"${\n                            addLineNumber(command)\n                        }`,\n                    );\n                } else if (compiledCommand.z !== undefined) {\n                    throw Error(\n                        `Invalid input: * \"${command.pretty()}\" and \"${compiledCommand.z.command.pretty()}\"${\n                            addLineNumber(command)\n                        }`,\n                    );\n                } else {\n                    const c = new CompiledCommandWithNextState(\n                        command,\n                        nextState,\n                    );\n                    compiledCommand.z = c;\n                    compiledCommand.nz = c;\n                }\n                break;\n            }\n            default: {\n                internalError();\n            }\n        }\n    }\n\n    return {\n        states: [...stateMap.keys()],\n        stateMap,\n        lookup,\n    };\n};\n", "// @ts-check\n// deno-lint-ignore-file no-unused-vars\n\nimport { ActionExecutor } from \"./ActionExecutor.js\";\nimport {\n    commandsToLookupTable,\n    CompiledCommandWithNextState,\n} from \"./compile.js\";\nimport {\n    analyzeProgram,\n    Program,\n    validateComponentsHeader,\n} from \"./Program.js\";\nimport {\n    Command,\n    commandWithLineNumber,\n    INITIAL_STATE,\n    RegistersHeader,\n} from \"./Command.js\";\nexport { INITIAL_STATE };\n\n/**\n * @returns {never}\n */\nconst error = (msg = \"error\") => {\n    throw Error(msg);\n};\n\n/**\n * @typedef {\"Z\" | \"NZ\" | \"ZZ\" | \"*\"} Input\n */\n\n/**\n * Emulator\n * \u30A8\u30DF\u30E5\u30EC\u30FC\u30BF\u30FC\n * \u30D7\u30ED\u30B0\u30E9\u30E0\u3068\u73FE\u5728\u306E\u72B6\u614B\u3001\u30B3\u30F3\u30DD\u30FC\u30CD\u30F3\u30C8\u3092\u4FDD\u6301\u3059\u308B\n */\nexport class Machine {\n    /**\n     * @param {Program} program\n     * @throws {Error} #REGISTERS\u3067\u306E\u521D\u671F\u5316\u306B\u5931\u6557\n     */\n    constructor(program) {\n        /**\n         * \u30B9\u30C6\u30C3\u30D7\u6570\n         */\n        this.stepCount = 0;\n\n        const analyzeResult = analyzeProgram(program);\n\n        /**\n         * @readonly\n         */\n        this.actionExecutor = new ActionExecutor(analyzeResult);\n\n        /** @type {0 | 1} */\n        this.prevOutput = 0;\n\n        const { states, stateMap, lookup } = commandsToLookupTable(\n            program.commands,\n        );\n\n        /**\n         * @readonly\n         * @private\n         */\n        this.lookup = lookup;\n\n        // set cache\n        for (const compiledCommand of lookup) {\n            const actions = (compiledCommand.z?.command.actions ?? []).concat(\n                compiledCommand.nz?.command.actions ?? [],\n            );\n            for (const action of actions) {\n                this.actionExecutor.setCache(action);\n            }\n        }\n\n        /**\n         * \u73FE\u5728\u306E\u72B6\u614B\u306E\u6DFB\u5B57\n         */\n        this.currentStateIndex = stateMap.get(INITIAL_STATE) ??\n            error(`${INITIAL_STATE} state is not present`);\n\n        // /**\n        //  * @type {number}\n        //  * @readonly\n        //  * @private\n        //  */\n        // this.initialIndex = this.currentStateIndex;\n\n        /**\n         * Statistics\n         * \u7D71\u8A08\n         * N\u3068NZ\u304C\u4EA4\u4E92\u306B\u4E26\u3076\n         * @type {number[]}\n         * @private\n         */\n        this.stateStatsArray = [];\n\n        /**\n         * @readonly\n         */\n        this.states = states;\n\n        /**\n         * @readonly\n         * @private\n         */\n        this.stateMap = stateMap;\n\n        /**\n         * @readonly\n         */\n        this.program = program;\n\n        /**\n         * @readonly\n         */\n        this.analyzeResult = analyzeResult;\n\n        // holey array\u306B\u306A\u3089\u306A\u3044\u3088\u3046\u306B\u57CB\u3081\u308B\n        for (let i = 0; i < lookup.length * 2; i++) {\n            this.stateStatsArray.push(0);\n        }\n\n        const regHeaders = program.registersHeader;\n        for (const regHeader of regHeaders) {\n            this.#setByRegistersHeader(regHeader);\n        }\n\n        // \u5B58\u5728\u3059\u308B\u5834\u5408\u306E\u307F\u691C\u8A3C\n        if (program.componentsHeader.length > 0) {\n            validateComponentsHeader(program.componentsHeader, analyzeResult);\n        }\n    }\n\n    /**\n     * \u6587\u5B57\u5217\u304B\u3089\u4F5C\u6210\u3059\u308B\n     * @param {string} source\n     * @param {{ name: string; content: string }[]} [libraryFiles]\n     * @returns {Machine}\n     * @throws \u30A8\u30E9\u30FC\n     */\n    static fromString(source, libraryFiles) {\n        const program = Program.parse(source, {\n            libraryFiles: libraryFiles ?? [],\n        });\n\n        if (typeof program === \"string\") {\n            throw Error(program);\n        }\n\n        return new Machine(program);\n    }\n\n    /**\n     * @returns {{ z: number, nz: number }[]}\n     */\n    getStateStats() {\n        const array = this.stateStatsArray;\n        const len = array.length;\n        /**\n         * @type {{ z: number, nz: number }[]}\n         */\n        const result = [];\n        for (let i = 0; i < len; i += 2) {\n            result.push({\n                z: array[i] ?? error(),\n                nz: array[i + 1] ?? error(),\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * @param {RegistersHeader} regHeader\n     * @throws\n     */\n    #setByRegistersHeader(regHeader) {\n        // Python\u306Eeval\u3068\u5408\u308F\u305B\u308B\u305F\u3081\u30B7\u30F3\u30B0\u30EB\u30AF\u30A9\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3092\u5909\u63DB\n        /** @type {string} */\n        const str = regHeader.content.replace(/'/ug, `\"`);\n\n        /** @type {import(\"./ActionExecutor.js\").RegistersInit} */\n        let parsed = {};\n        try {\n            parsed = JSON.parse(str);\n        } catch (_e) {\n            error(`Invalid #REGISTERS: is not a valid JSON: \"${str}\"`);\n        }\n        if (parsed === null || typeof parsed !== \"object\") {\n            error(`Invalid #REGISTERS: \"${str}\" is not an object`);\n        }\n\n        // throw if error is occurred\n        this.actionExecutor.setByRegistersInit(parsed);\n    }\n\n    /**\n     * \u73FE\u5728\u306E\u72B6\u614B\u306E\u540D\u524D\n     * @returns {string}\n     */\n    getCurrentState() {\n        const name = this.states[this.currentStateIndex];\n        if (name === undefined) {\n            error(\"State name is not found\");\n        }\n        return name;\n    }\n\n    /**\n     * \u72B6\u614B\u306E\u540D\u524D\u304B\u3089\u6DFB\u5B57\u3078\u306E\u30DE\u30C3\u30D7\u3092\u53D6\u5F97\u3059\u308B\n     * @returns {Map<string, number>}\n     */\n    getStateMap() {\n        return this.stateMap;\n    }\n\n    /**\n     * \u524D\u56DE\u306E\u51FA\u529B\u3092\u53D6\u5F97\u3059\u308B\n     * @returns {\"Z\" | \"NZ\"}\n     */\n    getPreviousOutput() {\n        return this.prevOutput === 0 ? \"Z\" : \"NZ\";\n    }\n\n    /**\n     * \u6B21\u306B\u5B9F\u884C\u3059\u308B\u30B3\u30DE\u30F3\u30C9\u3092\u8FD4\u3059\n     * @throws internal error\n     * @returns {CompiledCommandWithNextState}\n     */\n    getNextCommand() {\n        const currentStateIndex = this.currentStateIndex;\n        const compiledCommand = this.lookup[currentStateIndex];\n\n        if (compiledCommand === undefined) {\n            error(\n                `Internal Error: Next command is not found: ` +\n                    `Current state index: ${currentStateIndex}`,\n            );\n        }\n\n        const prevOutput = this.prevOutput;\n\n        if (prevOutput === 0) {\n            const z = compiledCommand.z;\n            if (z !== undefined) {\n                return z;\n            }\n        } else {\n            const nz = compiledCommand.nz;\n            if (nz !== undefined) {\n                return nz;\n            }\n        }\n\n        error(\n            \"Next command is not found: Current state = \" +\n                this.getCurrentState() + \", output = \" +\n                this.getPreviousOutput(),\n        );\n    }\n\n    /**\n     * @private\n     * @param {Command} command\n     * @param {number} num\n     */\n    _internalExecActionN(command, num) {\n        try {\n            const actionExecutor = this.actionExecutor;\n            for (const action of command.actions) {\n                // HALT_OUT\u306F\u542B\u307E\u308C\u306A\u3044\u305F\u3081\u505C\u6B62\u3057\u306A\u3044\n                actionExecutor.execActionN(action, num);\n            }\n        } catch (error) {\n            if (error instanceof Error) {\n                this.#throwError(error);\n            } else {\n                throw error;\n            }\n        }\n        const statIndex = this.currentStateIndex * 2 + this.prevOutput;\n        this.stateStatsArray[statIndex] =\n            (this.stateStatsArray[statIndex] ?? 0) + num;\n        this.stepCount += num;\n    }\n\n    /**\n     * n\u30B9\u30C6\u30C3\u30D7\u9032\u3081\u308B\n     * @param {number} n\n     * @param {boolean} isRunning \u5B9F\u884C\u4E2D\u306F\u91CD\u3044\u5834\u5408\u9014\u4E2D\u3067\u6B62\u3081\u308B\n     * @param {number} breakpointIndex -1\u306F\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u306A\u3057\n     * @param {-1 | 0 | 1} breakpointInputValue -1\u306FZ\u3068NZ\u4E21\u65B9\n     * @returns {\"Halted\" | \"Stop\" | undefined}\n     *   HALT_OUT\u306B\u3088\u308B\u505C\u6B62\u306F\"Halted\"\u3001\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u306B\u3088\u308B\u505C\u6B62\u306F\"Stop\"\u3001\u5B9F\u884C\u9014\u4E2D\u306Fundefined\n     * @throws {Error} \u5B9F\u884C\u6642\u30A8\u30E9\u30FC\n     */\n    exec(n, isRunning, breakpointIndex, breakpointInputValue) {\n        const hasBreakpoint = breakpointIndex !== -1;\n        const start = performance.now();\n\n        for (let i = 0; i < n; i++) {\n            const compiledCommand = this.getNextCommand();\n\n            // optimization\n            if (compiledCommand.tdecuOptimize) {\n                const tdec = compiledCommand.tdecuOptimize.tdecU;\n                let num = tdec.registerCache?.getValue();\n                if (num !== undefined && num !== 0) {\n                    num = Math.min(num, n - i);\n                    this._internalExecActionN(compiledCommand.command, num);\n                    i += num - 1; // i++\u3057\u3066\u3044\u308B\u305F\u30811\u6E1B\u3089\u3059\n                    continue;\n                }\n            } else if (compiledCommand.tdecbOptimize) {\n                const tdecb = compiledCommand.tdecbOptimize.tdecB;\n                let num = tdecb.registerCache?.pointer;\n                if (num !== undefined && num !== 0) {\n                    num = Math.min(num, n - i);\n                    this._internalExecActionN(compiledCommand.command, num);\n                    i += num - 1; // i++\u3057\u3066\u3044\u308B\u305F\u30811\u6E1B\u3089\u3059\n                    continue;\n                }\n            }\n            // optimization end\n\n            try {\n                const res = this.execCommandFor(compiledCommand);\n                if (res === -1) {\n                    return \"Halted\";\n                }\n            } catch (error) {\n                if (error instanceof Error) {\n                    this.#throwError(error);\n                } else {\n                    throw error;\n                }\n            }\n\n            // \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u306E\u72B6\u614B\u306E\u5834\u5408\u3001\u505C\u6B62\u3059\u308B\n            if (\n                hasBreakpoint &&\n                this.currentStateIndex === breakpointIndex &&\n                (breakpointInputValue === -1 ||\n                    breakpointInputValue === this.prevOutput)\n            ) {\n                return \"Stop\";\n            }\n\n            // 1\u30D5\u30EC\u30FC\u30E0\u306B50ms\u4EE5\u4E0A\u6642\u9593\u304C\u639B\u304B\u3063\u3066\u3044\u305F\u3089\u3001\u6B8B\u308A\u306F\u30B9\u30AD\u30C3\u30D7\u3059\u308B\n            if (\n                isRunning && (i + 1) % 500000 === 0 &&\n                (performance.now() - start >= 50)\n            ) {\n                return undefined;\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * @param {Error} err\n     */\n    #throwError(err) {\n        const command = this.getNextCommand().command;\n        return error(err.message + ` in ` + commandWithLineNumber(command));\n    }\n\n    /**\n     * @private\n     * @param {import('./compile.js').CompiledCommandWithNextState} compiledCommand\n     * @returns {-1 | void}\n     */\n    execCommandFor(compiledCommand) {\n        this.stepCount += 1;\n\n        // log\n        {\n            const currentStateIndex = this.currentStateIndex;\n            const prevOutput = this.prevOutput;\n            const statIndex = currentStateIndex * 2 + prevOutput;\n            this.stateStatsArray[statIndex] =\n                (this.stateStatsArray[statIndex] ?? 0) + 1;\n        }\n\n        /**\n         * -1\u306F\u8FD4\u308A\u5024\u7121\u3057\n         * @type {0 | 1 | -1}\n         */\n        let result = -1;\n\n        const actionExecutor = this.actionExecutor;\n        const command = compiledCommand.command;\n        for (const action of command.actions) {\n            const actionResult = actionExecutor.execAction(action);\n            if (actionResult === -1) { // HALT_OUT\n                return -1;\n            }\n            if (actionResult !== undefined) { // actionResult === 1 || actionResult ==== 0\n                if (result === -1) {\n                    result = actionResult;\n                } else {\n                    error(\n                        `Return value twice: ` +\n                            `line = ${commandWithLineNumber(command)}`,\n                    );\n                }\n            }\n        }\n\n        if (result === -1) {\n            error(\n                `No return value: line = ${commandWithLineNumber(command)}`,\n            );\n        }\n\n        const nextStateIndex = compiledCommand.nextState;\n        // INITIAL\u306B\u8FD4\u3063\u3066\u304F\u308B\u3053\u3068\u306F\u7981\u6B62\n        // \u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\u3057\u3066\u3044\u308B\u306E\u3067\u7701\u304F\n        // if (nextStateIndex === this.initialIndex) {\n        //     throw Error(`Return to INITIAL state during execution: line = ${\n        //         compiledCommand.command.pretty()\n        //     }`);\n        // }\n        this.currentStateIndex = nextStateIndex;\n        this.prevOutput = result;\n    }\n\n    /**\n     * \u6B21\u306E\u30B3\u30DE\u30F3\u30C9\u3092\u5B9F\u884C\u3059\u308B\n     * \u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u305F\u5834\u5408\u306F\u4F8B\u5916\u3092\u6295\u3052\u308B\n     * @returns {-1 | void}\n     * - -1\u306FHALT_OUT\n     * - void\u306F\u6B63\u5E38\n     * @throws {Error} \u5B9F\u884C\u6642\u30A8\u30E9\u30FC\n     */\n    execCommand() {\n        return this.execCommandFor(this.getNextCommand());\n    }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    const pendingListeners = new Map();\n    ep.addEventListener(\"message\", function handleMessage(ev) {\n        const { data } = ev;\n        if (!data || !data.id) {\n            return;\n        }\n        const resolver = pendingListeners.get(data.id);\n        if (!resolver) {\n            return;\n        }\n        try {\n            resolver(data);\n        }\n        finally {\n            pendingListeners.delete(data.id);\n        }\n    });\n    return createProxy(ep, pendingListeners, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, new Map(), {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, pendingListeners, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    pendingListeners.clear();\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, pendingListeners, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, pendingListeners, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously \u00AF\\_(\u30C4)_/\u00AF\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, pendingListeners, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn\u2019t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, pendingListeners, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, pendingListeners, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        pendingListeners.set(id, resolve);\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.js.map\n", "// @ts-check\n\nimport { Machine } from \"../src/Machine.js\";\nimport { Comlink } from \"./deps.js\";\n\nexport class MachineWorker {\n    /**\n     * @type {Machine}\n     */\n    // @ts-ignore\n    #machine;\n    /**\n     * @param {string} source\n     * @param {{ name: string; content: string; }[]} libraryFiles\n     */\n    async init(source, libraryFiles) {\n        this.#machine = Machine.fromString(source, libraryFiles);\n    }\n\n    async terminate() {\n        this.terminate();\n    }\n\n    async getBRegMap() {\n        return new Map(\n            [...this.#machine.actionExecutor.bRegMap.entries()].map(\n                ([key, breg]) => {\n                    return [key, {\n                        pointer: breg.pointer,\n                        bits: breg.getBits(),\n                    }];\n                },\n            ),\n        );\n    }\n\n    async getURegMap() {\n        return new Map(\n            [...this.#machine.actionExecutor.uRegMap.entries()].map(\n                ([key, ureg]) => {\n                    return [key, ureg.getValue()];\n                },\n            ),\n        );\n    }\n\n    async getStateMap() {\n        return this.#machine.getStateMap();\n    }\n\n    async getNextCommandText() {\n        const command = this.#machine.getNextCommand();\n        return command?.command.pretty();\n    }\n\n    async getB2D() {\n        const b2d = this.#machine.actionExecutor.b2d;\n        return {\n            x: b2d.x,\n            y: b2d.y,\n            maxX: b2d.getMaxX(),\n            maxY: b2d.getMaxY(),\n            data: b2d.getArray(),\n        };\n    }\n\n    async getOutput() {\n        return this.#machine.actionExecutor.output.getString();\n    }\n\n    async getStateStats() {\n        return this.#machine.getStateStats();\n    }\n\n    async getStates() {\n        return this.#machine.states;\n    }\n\n    async getCurrentStateIndex() {\n        return this.#machine.currentStateIndex;\n    }\n\n    async getInfo() {\n        return {\n            currentState: this.#machine.getCurrentState(),\n            previousOutput: this.#machine.getPreviousOutput(),\n            stepCount: this.#machine.stepCount,\n        };\n    }\n\n    async getCurrentState() {\n        return this.#machine.getCurrentState();\n    }\n\n    async getPreviousOutput() {\n        return this.#machine.getPreviousOutput();\n    }\n\n    async getAnalyzeResult() {\n        return this.#machine.analyzeResult;\n    }\n\n    async getAddSubMulToUIString() {\n        return this.#machine.actionExecutor.addSubMulToUIString();\n    }\n\n    /**\n     * @param {number} n\n     * @param {boolean} isRunning \u5B9F\u884C\u4E2D\u306F\u91CD\u3044\u5834\u5408\u9014\u4E2D\u3067\u6B62\u3081\u308B\n     * @param {number} breakpointIndex -1\u306F\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u306A\u3057\n     * @param {-1 | 0 | 1} breakpointInputValue -1\u306FZ\u3068NZ\u4E21\u65B9\n     * @returns {Promise<\"Halted\" | \"Stop\" | undefined>}\n     */\n    async exec(n, isRunning, breakpointIndex, breakpointInputValue) {\n        return this.#machine.exec(\n            n,\n            isRunning,\n            breakpointIndex,\n            breakpointInputValue,\n        );\n    }\n}\n\nComlink.expose(new MachineWorker());\n"],
  "mappings": "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",
  "names": ["Action", "_action", "ADD_A1_STRING", "ADD_B0_STRING", "ADD_B1_STRING", "ADD_STRING", "prettyOp", "op", "parseOp", "AddAction", "_AddAction", "Action", "str", "array", "add", "reg", "action", "B2D_INC_STRING", "B2D_TDEC_STRING", "B2D_READ_STRING", "B2D_SET_STRING", "B2D_B2DX_STRING", "B2D_B2DY_STRING", "B2D_B2D_STRING", "B2D_LEGACY_TDEC_STRING", "B2D_LEGACY_B2DX_STRING", "B2D_LEGACY_B2DY_STRING", "B2D_LEGACY_B2D_STRING", "parseOp", "op", "prettyOp", "parseAxis", "prettyAxis", "B2DAction", "_B2DAction", "Action", "axis", "str", "array", "action", "thisAxis", "otherAxis", "B_INC_STRING", "B_TDEC_STRING", "B_READ_STRING", "B_SET_STRING", "B_STRING", "prettyOp", "op", "parseOp", "BRegAction", "_BRegAction", "Action", "regNumber", "str", "array", "reg", "action", "HALT_OUT_STRING", "HALT_STRING", "HaltOutAction", "_HaltOutAction", "Action", "output", "str", "array", "haltOut", "action", "MUL_0_STRING", "MUL_1_STRING", "MUL_STRING", "parseOp", "op", "prettyOp", "MulAction", "_MulAction", "Action", "str", "array", "mul", "action", "NOP_STRING", "NopAction", "_NopAction", "Action", "str", "array", "nop", "action", "OUTPUT_STRING", "OutputAction", "_OutputAction", "Action", "digit", "str", "array", "output", "action", "SUB_A1_STRING", "SUB_B0_STRING", "SUB_B1_STRING", "SUB_STRING", "prettyOp", "op", "parseOp", "SubAction", "_SubAction", "Action", "str", "array", "sub", "reg", "action", "U_INC_STRING", "U_TDEC_STRING", "U_STRING", "R_STRING", "prettyOp", "op", "parseOp", "URegAction", "_URegAction", "Action", "regNumber", "str", "array", "reg", "action", "T_INC_STRING", "T_DEC_STRING", "T_READ_STRING", "T_SET_STRING", "T_RESET_STRING", "prettyOp", "op", "parseOp", "LegacyTRegAction", "_LegacyTRegAction", "Action", "regNumber", "str", "array", "reg", "action", "internalError", "ADD", "act", "value", "t", "internalError", "AddAction", "str", "generateArray", "n", "f", "_", "i", "B2D", "act", "internalError", "a", "arrayY", "value", "UReg", "act", "n", "v", "URegAction", "res", "internalError", "key", "value", "throwRegisterInitError", "debugStr", "parseBits", "str", "c", "BReg", "act", "newPointer", "bits", "pointer", "value", "internalError", "_", "n", "BRegAction", "len", "rest", "key", "throwRegisterInitError", "value0", "value1", "MUL", "act", "value", "NOP", "OUTPUT", "#string", "act", "x", "SUB", "act", "internalError", "x", "subLookupB0", "subLookupB1", "str", "LegacyTReg", "act", "internalError", "bits", "pointer", "bit", "throwNotFound", "type", "regNum", "parseNum", "isNaNLocal", "ActionExecutor", "unary", "binary", "legacyT", "n", "UReg", "BReg", "LegacyTReg", "ADD", "SUB", "MUL", "B2D", "OUTPUT", "NOP", "regInit", "key", "value", "#setKeyValue", "action", "BRegAction", "URegAction", "throwRegisterInitError", "reg", "AddAction", "NopAction", "SubAction", "MulAction", "B2DAction", "OutputAction", "HaltOutAction", "LegacyTRegAction", "parsers", "BRegAction", "URegAction", "B2DAction", "NopAction", "AddAction", "MulAction", "SubAction", "OutputAction", "HaltOutAction", "LegacyTRegAction", "parseAction", "str", "parser", "result", "lineNumberMessage", "line", "parseReplacements", "replacementsMapString", "line", "src", "key", "lineNumberMessage", "keyValueStr", "keyValue", "x", "internalError", "error", "INITIAL_STATE", "ProgramLine", "ComponentsHeader", "_ComponentsHeader", "content", "RegistersHeader", "_RegistersHeader", "prettyTemplateReplacement", "reps", "x", "Define", "_Define", "name", "defaultReplacements", "Enddef", "_Enddef", "Insert", "_Insert", "templateName", "replacements", "Include", "filename", "Comment", "str", "EmptyLine", "parseInput", "inputStr", "Command", "state", "input", "nextState", "actions", "line", "a", "parseProgramLine", "trimmedStr", "lineNumberMessage", "indexOfOpenBrace", "replacements_", "parseReplacements", "array", "internalError", "actionStrs", "actionsStr", "result", "parseAction", "addLineNumber", "command", "commandWithLineNumber", "validateActionReturnOnceCommand", "command", "actions", "x", "HaltOutAction", "valueReturnActions", "commandWithLineNumber", "addLineNumber", "validateNextStateIsNotINITIALCommand", "command", "INITIAL_STATE", "commandWithLineNumber", "validateNoDuplicatedActionCommand", "command", "actions", "actionStrs", "x", "maxIndex", "i", "act1", "act2", "commandWithLineNumber", "validateNoSameComponentCommand", "command", "actions", "x", "HaltOutAction", "len", "i", "a", "internalError", "j", "b", "commandWithLineNumber", "addLineNumberTwo", "command1", "command2", "validateZAndNZ", "commands", "errMsg", "c1", "c2", "lastIndex", "i", "a", "internalError", "b", "inputA", "inputB", "lastLine", "ProgramLines", "_ProgramLines", "array", "templates", "line", "str", "lines", "errors", "programLines", "activeTemplateName", "index", "lineStr", "Enddef", "parseProgramLine", "template", "internalError", "Define", "ProgramLine", "validateAll", "commands", "errors", "singleCommandValidators", "validateNoDuplicatedActionCommand", "validateActionReturnOnceCommand", "validateNoSameComponentCommand", "validateNextStateIsNotINITIALCommand", "command", "validator", "errorOrUndefined", "validators", "validateZAndNZ", "errorsOrUndefined", "replaceTemplate", "templateLine", "template", "insertReplacements", "replacedStr", "reps", "expandTemplate", "programLines", "libraries", "commands", "templates", "lines", "addLines", "newLines", "addArray", "i", "internalError", "newTemplateName", "newTemplate", "line", "Command", "Include", "file", "x", "Insert", "replacedSource", "newProgramLines", "ProgramLines", "CLOCK_PREFIX", "parseComponentsHeader", "content", "components", "strArray", "x", "str", "_clockPeriod", "numList", "parseRange", "rangeStr", "range", "num", "start", "end", "res", "i", "Program", "_Program", "commands", "componentsHeaders", "registersHeaders", "str", "noValidate", "libraryFiles", "programLines", "ProgramLines", "libraries", "libraryFile", "libraryProgramLines", "expandTemplate", "errorOrUndefined", "validateAll", "x", "ComponentsHeader", "RegistersHeader", "sortNub", "array", "a", "b", "analyzeProgram", "program", "actions", "command", "getNumbers", "klass", "action", "hasAdd", "hasSub", "hasMul", "hasB2D", "hasOutput", "AddAction", "SubAction", "MulAction", "B2DAction", "OutputAction", "URegAction", "BRegAction", "LegacyTRegAction", "validateComponentsHeader", "analyzeResult", "errors", "components", "c", "parseComponentsHeader", "neededUnary", "u", "neededBinary", "isBInc", "action", "BRegAction", "isUTdec", "URegAction", "getOptimizedTdecU", "command", "HaltOutAction", "tdecU", "getOptimizedTdecB", "tdecB", "CompiledCommandWithNextState", "nextState", "CompiledCommand", "z", "nz", "throwDuplicated", "oldCommand", "addLineNumber", "commandsToLookupTable", "commands", "stateMap", "lookup", "compiledCommand", "internalError", "c", "error", "msg", "Machine", "_Machine", "program", "analyzeResult", "analyzeProgram", "ActionExecutor", "states", "stateMap", "lookup", "commandsToLookupTable", "compiledCommand", "actions", "action", "INITIAL_STATE", "i", "regHeaders", "regHeader", "#setByRegistersHeader", "validateComponentsHeader", "source", "libraryFiles", "Program", "array", "len", "result", "str", "parsed", "name", "currentStateIndex", "z", "nz", "command", "num", "actionExecutor", "#throwError", "statIndex", "n", "isRunning", "breakpointIndex", "breakpointInputValue", "hasBreakpoint", "start", "err", "commandWithLineNumber", "prevOutput", "actionResult", "nextStateIndex", "comlink_exports", "__export", "createEndpoint", "expose", "finalizer", "proxy", "proxyMarker", "releaseProxy", "transfer", "transferHandlers", "windowEndpoint", "wrap", "throwMarker", "isObject", "val", "proxyTransferHandler", "obj", "port1", "port2", "port", "throwTransferHandler", "value", "serialized", "isAllowedOrigin", "allowedOrigins", "origin", "allowedOrigin", "ep", "callback", "ev", "id", "type", "path", "argumentList", "fromWireValue", "returnValue", "parent", "prop", "rawValue", "wireValue", "transferables", "toWireValue", "closeEndPoint", "error", "isMessagePort", "endpoint", "target", "pendingListeners", "data", "resolver", "createProxy", "throwIfProxyReleased", "isReleased", "releaseEndpoint", "requestResponseMessage", "proxyCounter", "proxyFinalizers", "newCount", "registerProxy", "unregisterProxy", "isProxyReleased", "_target", "r", "p", "_thisArg", "rawArgumentList", "last", "processArguments", "myFlat", "arr", "processed", "v", "transferCache", "transfers", "w", "context", "targetOrigin", "msg", "name", "handler", "serializedValue", "resolve", "generateUUID", "MachineWorker", "#machine", "source", "libraryFiles", "Machine", "key", "breg", "ureg", "b2d", "n", "isRunning", "breakpointIndex", "breakpointInputValue", "comlink_exports"]
}
